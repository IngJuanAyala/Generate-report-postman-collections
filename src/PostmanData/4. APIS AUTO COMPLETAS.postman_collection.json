{
	"info": {
		"_postman_id": "6ca21c5b-0a1e-4156-988e-99858016d748",
		"name": "4. APIS AUTO COMPLETAS",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "0. Authentication",
			"item": [
				{
					"name": "Authentication",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se guarda el token de la respuesta en la variable*/\r",
									"pm.collectionVariables.set(\"variable_key\", pm.response.body);\r",
									"\r",
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Autenticación exitosa\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"defaultAuth\": null,\r\n  \"password\": \"123456\",\r\n  \"rememberMe\": false,\r\n  \"userName\": \"userapi\"\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/authentication",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"authentication"
							]
						},
						"description": "http://localhost/PublicApi/api/authentication"
					},
					"response": []
				},
				{
					"name": "Authentication_Failed_UserorPassword",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Invalid username and / or password\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"defaultAuth\": null,\r\n  \"password\": \"12888456\",\r\n  \"rememberMe\": false,\r\n  \"userName\": \"user555api\"\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/authentication",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"authentication"
							]
						},
						"description": "http://localhost/PublicApi/api/authentication"
					},
					"response": []
				}
			]
		},
		{
			"name": "1. SLA",
			"item": [
				{
					"name": "SLA Create_Successful",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Creation Of SLA\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se guarda el json de la respuesta*/\r",
									"var data = pm.response.json();\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"IdSla1\", data.id);\r",
									"console.log (data.id);\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"NameSla1\", data.name);\r",
									"console.log (data.name);\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/*Se guarda en la variable \"RandNameSla1\" una palabra aleatoria para usarla como nombre y descripción*/\r",
									"var RandNameSla1 = pm.variables.replaceIn('{{$randomLoremWords}}');\r",
									"pm.variables.set('RandNameSla1', RandNameSla1);\r",
									"console.log ('Imprime Variable Random ' + RandNameSla1);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"cost\": 2000,\r\n  \"dateReview\": \"\",\r\n  \"description\": \"{{RandNameSla1}}\",\r\n  \"finishAlarm\": false,\r\n  \"finishDate\": \"2023-03-30\",\r\n  \"id\": 0,\r\n  \"isDeleted\": false,\r\n  \"limitDaysFinishAlarm\": 0,\r\n  \"limitDaysReviewAlarm\": 0,\r\n  \"name\": \"{{RandNameSla1}}\",\r\n  \"penality\": 1000,\r\n  \"reviewAlarm\": false,\r\n  \"startDate\": \"2020-03-12\",\r\n  \"typeAggrement\": 1\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/sla/SLA",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"sla",
								"SLA"
							]
						},
						"description": "http://localhost/PublicApi/api/sla/{typesla}"
					},
					"response": []
				},
				{
					"name": "SLA Create_Successful with timers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Creation Of SLA\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se guarda el json de la respuesta*/\r",
									"var data = pm.response.json();\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"IdSla2\", data.id);\r",
									"console.log (data.id);\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"NameSla2\", data.name);\r",
									"console.log (data.name);\r",
									"\r",
									"/*Se valida el tiempo de atención que devuelve el Json*/\r",
									"pm.test(\"Validate Timers\", () => {\r",
									"    data.chronometers.find(x => x.name == \"Tiempo de Atención\")\r",
									"    data.chronometers.find(x => x.id == 2)\r",
									"})\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/*Se guarda en la variable \"RandNameSla2\" una palabra aleatoria para usarla como nombre y descripción*/\r",
									"var RandNameSla2 = pm.variables.replaceIn('{{$randomLoremWords}}');\r",
									"pm.variables.set('RandNameSla2', RandNameSla2);\r",
									"console.log ('Imprime Variable Random ' + RandNameSla2);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"cost\": 2000,\r\n  \"dateReview\": \"\",\r\n  \"description\": \"{{RandNameSla2}}\",\r\n  \"finishAlarm\": false,\r\n  \"finishDate\": \"2020-03-30\",\r\n  \"id\": 0,\r\n  \"isDeleted\": false,\r\n  \"limitDaysFinishAlarm\": 0,\r\n  \"limitDaysReviewAlarm\": 0,\r\n  \"name\": \"{{RandNameSla2}}\",\r\n  \"penality\": 1000,\r\n  \"reviewAlarm\": false,\r\n  \"startDate\": \"2020-03-12\",\r\n  \"typeAggrement\": 1,\r\n  \"chronometers\": [\r\n    {\r\n      \"id\": 2,\r\n      \"isDefaultTime\": true,\r\n      \"isDeleted\": false,\r\n      \"name\": \"Tiempo de Atención\",\r\n      \"compilance\": 2,\r\n      \"target\": 3\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/sla/SLA",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"sla",
								"SLA"
							]
						},
						"description": "http://localhost/PublicApi/api/sla/{typesla}"
					},
					"response": []
				},
				{
					"name": "SLA Create_Failed required fields",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Creation Failed SLA Required Fields\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"cost\": 0,\r\n  \"dateReview\": \"\",\r\n  \"description\": \"\",\r\n  \"finishAlarm\": false,\r\n  \"finishDate\": \"\",\r\n  \"id\": 0,\r\n  \"isDeleted\": false,\r\n  \"limitDaysFinishAlarm\": 0,\r\n  \"limitDaysReviewAlarm\": 0,\r\n  \"name\": \"\",\r\n  \"penality\": 0,\r\n  \"reviewAlarm\": false,\r\n  \"startDate\": \"2020-01-27\",\r\n  \"typeAggrement\": 1\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/sla/SLA",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"sla",
								"SLA"
							]
						},
						"description": "http://localhost/PublicApi/api/sla/{typesla}"
					},
					"response": []
				},
				{
					"name": "SLA Create_Failed exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Creation Failed - Other SLA Exist With The Same Name.\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"NameSla1\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"cost\": 2000,\r\n  \"dateReview\": \"\",\r\n  \"description\": \"{{NameSla1}}\",\r\n  \"finishAlarm\": false,\r\n  \"finishDate\": \"2020-03-30\",\r\n  \"id\": 0,\r\n  \"isDeleted\": false,\r\n  \"limitDaysFinishAlarm\": 0,\r\n  \"limitDaysReviewAlarm\": 0,\r\n  \"name\": \"{{NameSla1}}\",\r\n  \"penality\": 1000,\r\n  \"reviewAlarm\": false,\r\n  \"startDate\": \"2020-03-12\",\r\n  \"typeAggrement\": 1\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/sla/SLA",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"sla",
								"SLA"
							]
						},
						"description": "http://localhost/PublicApi/api/sla/{typesla}"
					},
					"response": []
				},
				{
					"name": "SLA Create_Failed field length",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Creation Failed Of SLA Maxlength\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"cost\": 5,\r\n  \"dateReview\": \"\",\r\n  \"description\": \"as imprentas y archivos de texto. Lorem Ipsum ha sido el texto de relleno estándar de las industrias desde el año 1500, cuando un impresor (N. del T. persona que se dedica a la imprenta) desconocido usó una galería de textos y los mezcló de tal manera\",\r\n  \"finishAlarm\": false,\r\n  \"finishDate\": \"\",\r\n  \"id\": 0,\r\n  \"isDeleted\": false,\r\n  \"limitDaysFinishAlarm\": 0,\r\n  \"limitDaysReviewAlarm\": 0,\r\n  \"name\": \"Lorem Ipsum es simplemente el texto de relleno de las imprentas\",\r\n  \"penality\": 1,\r\n  \"reviewAlarm\": false,\r\n  \"startDate\": \"2020-06-13\",\r\n  \"typeAggrement\": 1\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/sla/SLA",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"sla",
								"SLA"
							]
						},
						"description": "http://localhost/PublicApi/api/sla/{typesla}"
					},
					"response": []
				},
				{
					"name": "SLA Update_Successful",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Update Of SLA\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdSla1\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/*Se guarda en la variable \"UpdateRandNameSla1\" una palabra aleatoria para usarla como nombre y descripción*/\r",
									"var UpdateRandNameSla1 = pm.variables.replaceIn('{{$randomLoremWords}}');\r",
									"pm.variables.set('UpdateRandNameSla1', UpdateRandNameSla1);\r",
									"console.log ('Imprime Variable Random ' + UpdateRandNameSla1);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"cost\": 20,\n    \"dateReview\": \"2020-12-24T00:00:00-05:00\",\n    \"description\": \"{{UpdateRandNameSla1}}\",\n    \"finishAlarm\": true,\n    \"finishDate\": \"2020-12-26T00:00:00-05:00\",\n    \"id\": {{IdSla1}},\n    \"isDeleted\": false,\n    \"limitDaysFinishAlarm\": 1,\n    \"limitDaysReviewAlarm\": 1,\n    \"name\": \"{{UpdateRandNameSla1}}\",\n    \"penality\": 10,\n    \"reviewAlarm\": true,\n    \"startDate\": \"2018-05-04T00:00:00-05:00\",\n    \"typeAggrement\": 1,\n    \"attachment\": null,\n    \"chronometers\": null\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/sla/sla/{{IdSla1}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"sla",
								"sla",
								"{{IdSla1}}"
							]
						},
						"description": "http://localhost/PublicApi/api/sla/{typesla}/{id}"
					},
					"response": []
				},
				{
					"name": "SLA Update_Successful with timers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Update Of SLA With Timers\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdSla1\");\r",
									"\r",
									"/*Se guarda el json de la respuesta*/\r",
									"var data = pm.response.json();\r",
									"\r",
									"/*Se valida el tiempo de atención que devuelve el Json*/\r",
									"pm.test(\"Validate Timers\", () => {\r",
									"    data.chronometers.find(x => x.name == \"Tiempo de Atención\")\r",
									"    data.chronometers.find(x => x.id == 2)\r",
									"})\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"UpdateNameSla1\", data.name);\r",
									"console.log (data.name);\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/*Se guarda en la variable \"Update2RandNameSla1\" una palabra aleatoria para usarla como nombre y descripción*/\r",
									"var Update2RandNameSla1 = pm.variables.replaceIn('{{$randomLoremWords}}');\r",
									"pm.variables.set('Update2RandNameSla1', Update2RandNameSla1);\r",
									"console.log ('Imprime Variable Random ' + Update2RandNameSla1);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"cost\": 1000,\n    \"dateReview\": \"2020-06-01T00:00:00\",\n    \"description\": \"{{Update2RandNameSla1}}\",\n    \"finishAlarm\": false,\n    \"finishDate\": \"2021-01-01T00:00:00\",\n    \"id\": {{IdSla1}},\n    \"isDeleted\": false,\n    \"limitDaysFinishAlarm\": 0,\n    \"limitDaysReviewAlarm\": 0,\n    \"name\": \"{{Update2RandNameSla1}}\",\n    \"penality\": 5000,\n    \"reviewAlarm\": false,\n    \"startDate\": \"2020-03-10T00:00:00\",\n    \"typeAggrement\": 1,\n    \"attachment\": null,\n    \"chronometers\": [\n    {\n      \"id\": 2,\n      \"isDefaultTime\": true,\n      \"isDeleted\": false,\n      \"name\": \"Tiempo de Atención\",\n      \"compilance\": 2,\n      \"target\": 3\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/sla/sla/{{IdSla1}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"sla",
								"sla",
								"{{IdSla1}}"
							]
						},
						"description": "http://localhost/PublicApi/api/sla/{typesla}/{id}"
					},
					"response": []
				},
				{
					"name": "SLA Update_Failed required fields",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Update Failed SLA Required Fields\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdSla1\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"cost\": 0,\n    \"dateReview\": null,\n    \"description\": \"\",\n    \"finishAlarm\": false,\n    \"finishDate\": null,\n    \"id\": {{IdSla1}},\n    \"isDeleted\": false,\n    \"limitDaysFinishAlarm\": 0,\n    \"limitDaysReviewAlarm\": 0,\n    \"name\": \"\",\n    \"penality\": 0,\n    \"reviewAlarm\": false,\n    \"startDate\": \"2020-01-15T00:00:00\",\n    \"typeAggrement\": 1,\n    \"attachment\": null,\n    \"chronometers\": null\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/sla/sla/{{IdSla1}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"sla",
								"sla",
								"{{IdSla1}}"
							]
						},
						"description": "http://localhost/PublicApi/api/sla/{typesla}/{id}"
					},
					"response": []
				},
				{
					"name": "SLA Update_Failed exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Update Failed - Other SLA Exist With The Same Name.\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdSla1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"NameSla2\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"cost\": 0,\n    \"dateReview\": null,\n    \"description\": \"{{NameSla2}}\",\n    \"finishAlarm\": false,\n    \"finishDate\": null,\n    \"id\": {{IdSla1}},\n    \"isDeleted\": false,\n    \"limitDaysFinishAlarm\": 0,\n    \"limitDaysReviewAlarm\": 0,\n    \"name\": \"{{NameSla2}}\",\n    \"penality\": 0,\n    \"reviewAlarm\": false,\n    \"startDate\": \"2020-01-15T00:00:00\",\n    \"typeAggrement\": 1,\n    \"attachment\": null,\n    \"chronometers\": null\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/sla/sla/{{IdSla1}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"sla",
								"sla",
								"{{IdSla1}}"
							]
						},
						"description": "http://localhost/PublicApi/api/sla/{typesla}/{id}"
					},
					"response": []
				},
				{
					"name": "SLA Update_Failed field length",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Update Failed Of SLA Maxlength\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdSla1\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"cost\": 0,\n    \"dateReview\": null,\n    \"description\": \"as imprentas y archivos de texto. Lorem Ipsum ha sido el texto de relleno estándar de las industrias desde el año 1500, cuando un impresor (N. del T. persona que se dedica a la imprenta) desconocido usó una galería de textos y los mezcló de tal manera\",\n    \"finishAlarm\": false,\n    \"finishDate\": null,\n    \"id\": {{IdSla1}},\n    \"isDeleted\": false,\n    \"limitDaysFinishAlarm\": 0,\n    \"limitDaysReviewAlarm\": 0,\n    \"name\": \"Lorem Ipsum es simplemente el texto de relleno de las imprentas\",\n    \"penality\": 0,\n    \"reviewAlarm\": false,\n    \"startDate\": \"2020-03-03T00:00:00-05:00\",\n    \"typeAggrement\": 1,\n    \"attachment\": null,\n    \"chronometers\": null\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/sla/sla/{{IdSla1}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"sla",
								"sla",
								"{{IdSla1}}"
							]
						},
						"description": "http://localhost/PublicApi/api/sla/{typesla}/{id}"
					},
					"response": []
				},
				{
					"name": "SLA Query by ID_Successful",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Read Of SLA\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdSla1\");\r",
									"\r",
									"/*Se guarda el json de la respuesta*/\r",
									"var data = pm.response.json();\r",
									"\r",
									"/*Se valida el tiempo de atención que devuelve el Json*/\r",
									"pm.test(\"Validate Timers\", () => {\r",
									"    data.chronometers.find(x => x.name == \"Tiempo de Atención\")\r",
									"    data.chronometers.find(x => x.id == 2)\r",
									"})\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{API_WS_URL}}/sla/SLA/{{IdSla1}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"sla",
								"SLA",
								"{{IdSla1}}"
							]
						},
						"description": "http://localhost/PublicApi/api/sla/{typesla}/{id}"
					},
					"response": []
				},
				{
					"name": "SLA Query by ID_Failed not exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"No Information Found\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{API_WS_URL}}/sla/SLA/500",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"sla",
								"SLA",
								"500"
							]
						},
						"description": "http://localhost/PublicApi/api/sla/{typesla}/{id}"
					},
					"response": []
				},
				{
					"name": "SLA Query List_Successful",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful List Of SLA\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"NameSla2\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"word\": \"{{NameSla2}}\",\r\n  \"page\": 0,\r\n  \"rows\": 0\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/sla/list/1",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"sla",
								"list",
								"1"
							]
						},
						"description": "http://localhost/PublicApi/api/sla/list/{typesla}"
					},
					"response": []
				},
				{
					"name": "SLA Query List_Failed not exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"No Information Found\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"word\": \"No ex\",\r\n  \"page\": 0,\r\n  \"rows\": 0\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/sla/list/1",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"sla",
								"list",
								"1"
							]
						},
						"description": "http://localhost/PublicApi/api/sla/list/{typesla}"
					},
					"response": []
				},
				{
					"name": "SLA Delete_Successful",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Delete Of SLA\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdSla2\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_WS_URL}}/sla/SLA/{{IdSla2}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"sla",
								"SLA",
								"{{IdSla2}}"
							]
						},
						"description": "http://localhost/PublicApi/api/sla/{typesla}/{id}"
					},
					"response": []
				},
				{
					"name": "SLA Delete_ Failed used",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Record In Use, Cannot Be Deleted.\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_WS_URL}}/sla/SLA/4",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"sla",
								"SLA",
								"4"
							]
						},
						"description": "http://localhost/PublicApi/api/sla/{typesla}/{id}"
					},
					"response": []
				},
				{
					"name": "SLA Delete_ Failed not exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"The SLA, No Found.\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_WS_URL}}/sla/SLA/1000",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"sla",
								"SLA",
								"1000"
							]
						},
						"description": "http://localhost/PublicApi/api/sla/{typesla}/{id}"
					},
					"response": []
				}
			],
			"description": "Apis de SLA"
		},
		{
			"name": "2. Skills",
			"item": [
				{
					"name": "Skill Create_Sucessful",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Creation Of Skill\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se guarda el json de la respuesta*/\r",
									"var data = pm.response.json();\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"IdSkill1\", data.id);\r",
									"console.log (data.id);\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"NameSkill1\", data.name);\r",
									"console.log (data.name);\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/*Se guarda en la variable \"RandNameSkill1\" una palabra aleatoria para usarla como nombre y descripción*/\r",
									"var RandNameSkill1 = pm.variables.replaceIn('{{$randomLoremWords}}');\r",
									"pm.variables.set('RandNameSkill1', RandNameSkill1);\r",
									"console.log ('Imprime Variable Random ' + RandNameSkill1);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"description\": \"{{RandNameSkill1}}\",\r\n  \"id\": 0,\r\n  \"isActive\": true,\r\n  \"name\": \"{{RandNameSkill1}}\"\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/skill",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"skill"
							]
						},
						"description": "http://localhost/PublicApi/api/skill"
					},
					"response": []
				},
				{
					"name": "Skill Create_Successful inactive",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Creation Of Skill Inactive\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se guarda el json de la respuesta*/\r",
									"var data = pm.response.json();\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"IdSkill2\", data.id);\r",
									"console.log (data.id);\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"NameSkill2\", data.name);\r",
									"console.log (data.name);\r",
									"\r",
									"/*Se valida el estado que devuelve el Json*/\r",
									"pm.test(\"Validate State Skill\", () => {\r",
									"    pm.expect(data.isActive).to.eql(false);\r",
									"})\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/*Se guarda en la variable \"RandNameSkill2\" una palabra aleatoria para usarla como nombre y descripción*/\r",
									"var RandNameSkill2 = pm.variables.replaceIn('{{$randomLoremWords}}');\r",
									"pm.variables.set('RandNameSkill2', RandNameSkill2);\r",
									"console.log ('Imprime Variable Random ' + RandNameSkill2);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"description\": \"{{RandNameSkill2}}\",\r\n  \"id\": 0,\r\n  \"isActive\": false,\r\n  \"name\": \"{{RandNameSkill2}}\"\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/skill",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"skill"
							]
						},
						"description": "http://localhost/PublicApi/api/skill"
					},
					"response": []
				},
				{
					"name": "Skill Create_Failed required fields",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Creation Failed Skill Required Fields\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"description\": \"\",\r\n  \"id\": 0,\r\n  \"isActive\": true,\r\n  \"name\": \"\"\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/skill",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"skill"
							]
						},
						"description": "http://localhost/PublicApi/api/skill"
					},
					"response": []
				},
				{
					"name": "Skill Create_Failed exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Creation Failed - Other Skill Exist With The Same Name.\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"NameSkill1\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"description\": \"{{NameSkill1}}\",\r\n  \"id\": 0,\r\n  \"isActive\": true,\r\n  \"name\": \"{{NameSkill1}}\"\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/skill",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"skill"
							]
						},
						"description": "http://localhost/PublicApi/api/skill"
					},
					"response": []
				},
				{
					"name": "Skill Create_Failed field length",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Creation Failed Of Skill Maxlength\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"description\": \"Es un hecho establecido hace demasiado tiempo que un lector se distraerá con el contenido del texto de un sitio mientras que mira su diseño. El punto de usar Lorem Ipsum es que tiene una distribución más o menos normal de las letras, al contrario de usar textos como por ejemplo\",\r\n  \"id\": 0,\r\n  \"isActive\": true,\r\n  \"name\": \"Es un hecho establecido hace demasiado tiempo que un lector se distraerá con el contenido del texto de un siti\"\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/skill",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"skill"
							]
						},
						"description": "http://localhost/PublicApi/api/skill"
					},
					"response": []
				},
				{
					"name": "Skill Update_Successful",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Update Of Skill\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdSkill1\");\r",
									"\r",
									"/*Se guarda el json de la respuesta*/\r",
									"var data = pm.response.json();\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"UpdateNameSkill1\", data.name);\r",
									"console.log (data.name);\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/*Se guarda en la variable \"UpdateRandNameSkill1\" una palabra aleatoria para usarla como nombre y descripción*/\r",
									"var UpdateRandNameSkill1 = pm.variables.replaceIn('{{$randomLoremWords}}');\r",
									"pm.variables.set('UpdateRandNameSkill1', UpdateRandNameSkill1);\r",
									"console.log ('Imprime Variable Random ' + UpdateRandNameSkill1);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"{{UpdateRandNameSkill1}}\",\n    \"id\": {{IdSkill1}},\n    \"isActive\": true,\n    \"name\": \"{{UpdateRandNameSkill1}}\"\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/skill/{{IdSkill1}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"skill",
								"{{IdSkill1}}"
							]
						},
						"description": "http://localhost/PublicApi/api/skill/{id}"
					},
					"response": []
				},
				{
					"name": "Skill Update_Successful active",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Update Of Skill Active\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdSkill2\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"NameSkill2\");\r",
									"\r",
									"/*Se guarda el json de la respuesta*/\r",
									"var data = pm.response.json();\r",
									"\r",
									"/*Se valida el estado que devuelve el Json*/\r",
									"pm.test(\"Validate State Skill\", () => {\r",
									"    pm.expect(data.isActive).to.eql(true);\r",
									"})\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"{{NameSkill2}}\",\n    \"id\": {{IdSkill2}},\n    \"isActive\": true,\n    \"name\": \"{{NameSkill2}}\"\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/skill/{{IdSkill2}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"skill",
								"{{IdSkill2}}"
							]
						},
						"description": "http://localhost/PublicApi/api/skill/{id}"
					},
					"response": []
				},
				{
					"name": "Skill Update_Failed required fields",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Update Failed Skill Required Fields\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdSkill1\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"\",\n    \"id\": {{IdSkill1}},\n    \"isActive\": true,\n    \"name\": \"\"\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/skill/{{IdSkill1}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"skill",
								"{{IdSkill1}}"
							]
						},
						"description": "http://localhost/PublicApi/api/skill/{id}"
					},
					"response": []
				},
				{
					"name": "Skill Update_Failed exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Update Failed - Other Skill Exist With The Same Name.\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdSkill1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"NameSkill2\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"{{NameSkill2}}\",\n    \"id\": {{IdSkill1}},\n    \"isActive\": true,\n    \"name\": \"{{NameSkill2}}\"\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/skill/{{IdSkill1}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"skill",
								"{{IdSkill1}}"
							]
						},
						"description": "http://localhost/PublicApi/api/skill/{id}"
					},
					"response": []
				},
				{
					"name": "Skill Update_Failed field length",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Update Failed Of Skill Maxlength\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdSkill1\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"Lorem Ipsum es simplemente el texto de relleno de las imprentas y archivos de texto. Lorem Ipsum ha sido el texto de relleno estándar de las industrias deLorem Ipsum es simplemente el texto de relleno de las imprentas y archivos de texto. Lorem Ipsum ha sido el texto de relleno estándar de las industrias de\",\n    \"id\": {{IdSkill1}},\n    \"isActive\": false,\n    \"name\": \"Lorem Ipsum es simplemente el texto de relleno de las imprentas y archivos de texto. Lorem Ipsum ha sido el texto de relleno estándar de las industrias de\"\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/skill/{{IdSkill1}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"skill",
								"{{IdSkill1}}"
							]
						},
						"description": "http://localhost/PublicApi/api/skill/{id}"
					},
					"response": []
				},
				{
					"name": "Skill by ID_Successful",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Read Of Skill\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdSkill1\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{API_WS_URL}}/skill/{{IdSkill1}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"skill",
								"{{IdSkill1}}"
							]
						},
						"description": "http://localhost/PublicApi/api/skill/{id}"
					},
					"response": []
				},
				{
					"name": "Skill by ID_Failed not exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"No Information Found\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{API_WS_URL}}/skill/70",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"skill",
								"70"
							]
						},
						"description": "http://localhost/PublicApi/api/skill/{id}"
					},
					"response": []
				},
				{
					"name": "Skills List_Successful",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful List Of Skill\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"NameSkill2\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"word\": \"{{NameSkill2}}\",\r\n  \"page\": 0,\r\n  \"rows\": 0\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/skill/list",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"skill",
								"list"
							]
						},
						"description": "http://localhost/PublicApi/api/skill/list"
					},
					"response": []
				},
				{
					"name": "Skills List_Failed not exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"No Information Found\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"word\": \"Pruebaggg\",\r\n  \"page\": 0,\r\n  \"rows\": 0\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/skill/list",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"skill",
								"list"
							]
						},
						"description": "http://localhost/PublicApi/api/skill/list"
					},
					"response": []
				},
				{
					"name": "Skill Delete_Successful",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Delete Of Skill\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdSkill2\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_WS_URL}}/skill/{{IdSkill2}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"skill",
								"{{IdSkill2}}"
							]
						},
						"description": "http://localhost/PublicApi/api/skill/{id}"
					},
					"response": []
				},
				{
					"name": "Skill Delete_Failed used",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Record In Use, Cannot Be Deleted.\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_WS_URL}}/skill/1",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"skill",
								"1"
							]
						},
						"description": "http://localhost/PublicApi/api/skill/{id}"
					},
					"response": []
				},
				{
					"name": "Skill Delete_Failed not exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"The Skill, No Found.\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_WS_URL}}/skill/1000",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"skill",
								"1000"
							]
						},
						"description": "http://localhost/PublicApi/api/skill/{id}"
					},
					"response": []
				}
			],
			"description": "Apis de Habilidades"
		},
		{
			"name": "3. Vehicles",
			"item": [
				{
					"name": "Vehicle Create_Successful",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/*Se guarda en la variable \"RandNameVehicle1\" una palabra aleatoria para usarla como nombre y descripción*/\r",
									"var RandNameVehicle1 = pm.variables.replaceIn('{{$randomLoremWords}}');\r",
									"pm.variables.set('RandNameVehicle1', RandNameVehicle1);\r",
									"console.log ('Imprime Variable Random ' + RandNameVehicle1);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Creation Of Vehicle\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se guarda el json de la respuesta*/\r",
									"var data = pm.response.json();\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"IdVehicle1\", data.id);\r",
									"console.log (data.id);\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"NameVehicle1\", data.name);\r",
									"console.log (data.name);\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"active\": true,\r\n  \"costByKilometer\": 1000,\r\n  \"description\": \"{{RandNameVehicle1}}\",\r\n  \"id\": 0,\r\n  \"initialCost\": 1000,\r\n  \"name\": \"{{RandNameVehicle1}}\",\r\n  \"transportDescription\": \"\",\r\n  \"transportModeId\": 3,\r\n  \"transportName\": \"\"\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/vehicle",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"vehicle"
							]
						},
						"description": "http://localhost/PublicApi/api/vehicle"
					},
					"response": []
				},
				{
					"name": "Vehicle Create_Successful inactive",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/*Se guarda en la variable \"RandNameVehicle2\" una palabra aleatoria para usarla como nombre y descripción*/\r",
									"var RandNameVehicle2 = pm.variables.replaceIn('{{$randomLoremWords}}');\r",
									"pm.variables.set('RandNameVehicle2', RandNameVehicle2);\r",
									"console.log ('Imprime Variable Random ' + RandNameVehicle2);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Creation Of Vehicle Inactive\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se guarda el json de la respuesta*/\r",
									"var data = pm.response.json();\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"IdVehicle2\", data.id);\r",
									"console.log (data.id);\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"NameVehicle2\", data.name);\r",
									"console.log (data.name);\r",
									"\r",
									"/*Se valida el estado que devuelve el Json*/\r",
									"pm.test(\"Validate State Vehicle\", () => {\r",
									"    pm.expect(data.active).to.eql(false);\r",
									"})\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"active\": false,\r\n  \"costByKilometer\": 2000,\r\n  \"description\": \"{{RandNameVehicle2}}\",\r\n  \"id\": 0,\r\n  \"initialCost\": 2000,\r\n  \"name\": \"{{RandNameVehicle2}}\",\r\n  \"transportDescription\": \"\",\r\n  \"transportModeId\": 1,\r\n  \"transportName\": \"\"\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/vehicle",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"vehicle"
							]
						},
						"description": "http://localhost/PublicApi/api/vehicle"
					},
					"response": []
				},
				{
					"name": "Vehicle Create_Failed required fields",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Creation Failed Vehicle Required Fields\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"active\": true,\r\n  \"costByKilometer\": 0,\r\n  \"description\": \"\",\r\n  \"id\": 0,\r\n  \"initialCost\": 0,\r\n  \"name\": \"\",\r\n  \"transportDescription\": \"\",\r\n  \"transportModeId\": 0,\r\n  \"transportName\": \"\"\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/vehicle",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"vehicle"
							]
						},
						"description": "http://localhost/PublicApi/api/vehicle"
					},
					"response": []
				},
				{
					"name": "Vehicle Create_Failed exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Creation Failed - Other Vehicle Exist With The Same Name.\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.get(\"NameVehicle1\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"active\": true,\r\n  \"costByKilometer\": 100,\r\n  \"description\": \"{{NameVehicle1}}\",\r\n  \"id\": 0,\r\n  \"initialCost\": 100,\r\n  \"name\": \"{{NameVehicle1}}\",\r\n  \"transportDescription\": \"\",\r\n  \"transportModeId\": 1,\r\n  \"transportName\": \"\"\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/vehicle",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"vehicle"
							]
						},
						"description": "http://localhost/PublicApi/api/vehicle"
					},
					"response": []
				},
				{
					"name": "Vehicle Create_Failed field length",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Creation Failed Of Vehicle Maxlength\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"active\": true,\r\n  \"costByKilometer\": 0,\r\n  \"description\": \"Lorem Ipsum es simplemente el texto de relleno de las imprentas y archivos de texto. Lorem Ipsum ha sido el texto de relleno estándar de las industrias deLorem Ipsum es simplemente el texto de Lorem Ipsum es simplemente el texto de Lorem Ipsum es simplemente el texto de relleno de las imprentas y archivos de texto. Lorem Ipsum ha sido el texto de relleno estándar de las industrias deLorem Ipsum es simplemente el texto de Lorem Ipsum es simplemente el texto de \",\r\n  \"id\": 0,\r\n  \"initialCost\": 0,\r\n  \"name\": \"Lorem Ipsum es simplemente el texto de relleno de las imprentas y archivos de texto. Lorem Ipsum ha sido el texto de relleno estándar de las industrias de\",\r\n  \"transportDescription\": \"\",\r\n  \"transportModeId\": 1,\r\n  \"transportName\": \"\"\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/vehicle",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"vehicle"
							]
						},
						"description": "http://localhost/PublicApi/api/vehicle"
					},
					"response": []
				},
				{
					"name": "Vehicle Update_Successful",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/*Se guarda en la variable \"UpdateRandNameVehicle1\" una palabra aleatoria para usarla como nombre y descripción*/\r",
									"var UpdateRandNameVehicle1 = pm.variables.replaceIn('{{$randomLoremWords}}');\r",
									"pm.variables.set('UpdateRandNameVehicle1', UpdateRandNameVehicle1);\r",
									"console.log ('Imprime Variable Random ' + UpdateRandNameVehicle1);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Update Of Vehicle\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdVehicle1\");\r",
									"\r",
									"/*Se guarda el json de la respuesta*/\r",
									"var data = pm.response.json();\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"UpdateNameVehicle1\", data.name);\r",
									"console.log (data.name);\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"active\": true,\n    \"costByKilometer\": 200,\n    \"description\": \"{{UpdateRandNameVehicle1}}\",\n    \"id\": {{IdVehicle1}},\n    \"initialCost\": 100,\n    \"name\": \"{{UpdateRandNameVehicle1}}\",\n    \"transitModes\": null,\n    \"transportDescription\": \"admin_carDescription_label\",\n    \"transportModeId\": 1,\n    \"transportName\": \"Car\"\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/vehicle/{{IdVehicle1}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"vehicle",
								"{{IdVehicle1}}"
							]
						},
						"description": "http://localhost/PublicApi/api/vehicle/{id}"
					},
					"response": []
				},
				{
					"name": "Vehicle Update_Successful active",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Update Of Vehicle Active\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdVehicle2\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"NameVehicle2\");\r",
									"\r",
									"/*Se guarda el json de la respuesta*/\r",
									"var data = pm.response.json();\r",
									"\r",
									"/*Se valida el estado que devuelve el Json*/\r",
									"pm.test(\"Validate State Vehicle\", () => {\r",
									"    pm.expect(data.active).to.eql(true);\r",
									"})\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"active\": true,\n    \"costByKilometer\": 1000,\n    \"description\": \"{{NameVehicle2}}\",\n    \"id\": {{IdVehicle2}},\n    \"initialCost\": 1000,\n    \"name\": \"{{NameVehicle2}}\",\n    \"transitModes\": \"\",\n    \"transportDescription\": \"admin_bikeDescription_label\",\n    \"transportModeId\": 3,\n    \"transportName\": \"Bike\"\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/vehicle/{{IdVehicle2}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"vehicle",
								"{{IdVehicle2}}"
							]
						},
						"description": "http://localhost/PublicApi/api/vehicle/{id}"
					},
					"response": []
				},
				{
					"name": "Vehicle Update_Failed required fields",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Update Failed Vehicle Required Fields\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdVehicle1\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"active\": false,\n    \"costByKilometer\": 1000,\n    \"description\": \"\",\n    \"id\": {{IdVehicle1}},\n    \"initialCost\": 1000,\n    \"name\": \"\",\n    \"transitModes\": \"\",\n    \"transportDescription\": \"admin_bikeDescription_label\",\n    \"transportModeId\": 0,\n    \"transportName\": \"Bike\"\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/vehicle/{{IdVehicle1}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"vehicle",
								"{{IdVehicle1}}"
							]
						},
						"description": "http://localhost/PublicApi/api/vehicle/{id}"
					},
					"response": []
				},
				{
					"name": "Vehicle Update_Failed exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Update Failed - Other Vehicle Exist With The Same Name.\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdVehicle1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"NameVehicle2\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"active\": false,\n    \"costByKilometer\": 1000,\n    \"description\": \"{{NameVehicle2}}\",\n    \"id\": {{IdVehicle1}},\n    \"initialCost\": 1000,\n    \"name\": \"{{NameVehicle2}}\",\n    \"transitModes\": \"\",\n    \"transportDescription\": \"admin_bikeDescription_label\",\n    \"transportModeId\": 3,\n    \"transportName\": \"Bike\"\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/vehicle/{{IdVehicle1}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"vehicle",
								"{{IdVehicle1}}"
							]
						},
						"description": "http://localhost/PublicApi/api/vehicle/{id}"
					},
					"response": []
				},
				{
					"name": "Vehicle Update_Failed field length",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Update Failed Of Vehicle Maxlength\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdVehicle1\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"active\": false,\n    \"costByKilometer\": 2000,\n    \"description\": \"Lorem Ipsum es simplemente el texto de relleno de las imprentas y archivos de texto. Lorem Ipsum ha sido el texto de relleno estándar de las industrias deLorem Ipsum es simplemente el texto de relleno de las imprentas y archivos de texto. Lorem Ipsum ha sido el texto de relleno estándar de las industrias de\",\n    \"id\": {{IdVehicle1}},\n    \"initialCost\": 2000,\n    \"name\": \"Lorem Ipsum es simplemente el texto de relleno de las imprentas y archivos de texto. Lorem Ipsum ha sido el texto de relleno estándar de las industrias de\",\n    \"transitModes\": null,\n    \"transportDescription\": \"admin_carDescription_label\",\n    \"transportModeId\": 1,\n    \"transportName\": \"Car\"\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/vehicle/{{IdVehicle1}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"vehicle",
								"{{IdVehicle1}}"
							]
						},
						"description": "http://localhost/PublicApi/api/vehicle/{id}"
					},
					"response": []
				},
				{
					"name": "Vehicle by ID_Successful",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Read Of Vehicle\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdVehicle1\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{API_WS_URL}}/vehicle/{{IdVehicle1}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"vehicle",
								"{{IdVehicle1}}"
							]
						},
						"description": "http://localhost/PublicApi/api/vehicle/{id}"
					},
					"response": []
				},
				{
					"name": "Vehicle by ID_Failed not exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"No Information Found\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{API_WS_URL}}/vehicle/70",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"vehicle",
								"70"
							]
						},
						"description": "http://localhost/PublicApi/api/vehicle/{id}"
					},
					"response": []
				},
				{
					"name": "Vehicles List_Successful",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful List Of Vehicle\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"NameVehicle2\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"word\": \"{{NameVehicle2}}\",\r\n  \"page\": 0,\r\n  \"rows\": 0\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/vehicle/list",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"vehicle",
								"list"
							]
						},
						"description": "http://localhost/PublicApi/api/vehicle/list"
					},
					"response": []
				},
				{
					"name": "Vehicles List_Failed not exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"No Information Found\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"word\": \"Nuevo hh\",\r\n  \"page\": 0,\r\n  \"rows\": 0\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/vehicle/list",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"vehicle",
								"list"
							]
						},
						"description": "http://localhost/PublicApi/api/vehicle/list"
					},
					"response": []
				},
				{
					"name": "Vehicle Delete_Successful",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Delete Of Vehicle\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdVehicle2\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_WS_URL}}/vehicle/{{IdVehicle2}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"vehicle",
								"{{IdVehicle2}}"
							]
						},
						"description": "http://localhost/PublicApi/api/vehicle/{id}"
					},
					"response": []
				},
				{
					"name": "Vehicle Delete_Failed used",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Record In Use, Cannot Be Deleted.\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_WS_URL}}/vehicle/1",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"vehicle",
								"1"
							]
						},
						"description": "http://localhost/PublicApi/api/vehicle/{id}"
					},
					"response": []
				},
				{
					"name": "Vehicle Delete_Failed not exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"The Vehicle, No Found.\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_WS_URL}}/vehicle/1000",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"vehicle",
								"1000"
							]
						},
						"description": "http://localhost/PublicApi/api/vehicle/{id}"
					},
					"response": []
				}
			],
			"description": "Apis de Transportes"
		},
		{
			"name": "4. Services",
			"item": [
				{
					"name": "Service Create_Successful",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/*Se guarda en la variable \"RandNameService1\" una palabra aleatoria para usarla como nombre y descripción*/\r",
									"var RandNameService1 = pm.variables.replaceIn('{{$randomLoremWords}}');\r",
									"pm.variables.set('RandNameService1', RandNameService1);\r",
									"console.log ('Imprime Variable Random ' + RandNameService1);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Creation Of Service\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdSkill1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"UpdateNameSkill1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdSla1\");\r",
									"\r",
									"/*Se guarda el json de la respuesta*/\r",
									"var data = pm.response.json();\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"IdService1\", data.id);\r",
									"console.log (data.id);\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"NameService1\", data.name);\r",
									"console.log (data.name);\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n \"baseCost\": 12400.00,\r\n    \"calendarId\": 1,\r\n    \"description\": \"{{RandNameService1}}\",\r\n    \"executionTime\": 30,\r\n    \"id\": 0,\r\n    \"isActive\": true,\r\n    \"isDefault\": true,\r\n    \"isPriorityOrEmergency\": true,\r\n    \"isProvideAllCIs\": false,\r\n    \"modelId\": 1,\r\n    \"name\": \"{{RandNameService1}}\",\r\n    \"olaId\": 5,\r\n    \"projectId\": null,\r\n    \"providerAssignmentType\": 1,\r\n    \"slaId\": {{IdSla1}},\r\n    \"subjectDefault\": \"Asunto\",\r\n    \"timePlanning\": 30,\r\n    \"type\": 2,\r\n    \"ucId\": 6,\r\n    \"additionalFields\": [],\r\n    \"productsServices\": [],\r\n    \"providers\": [],\r\n    \"serviceTasks\": null,\r\n    \"skills\": [\r\n        {\r\n            \"description\": \"{{UpdateNameSkill1}}\",\r\n            \"id\": {{IdSkill1}},\r\n            \"isActive\": true,\r\n            \"name\": \"{{UpdateNameSkill1}}\"\r\n        }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/service",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"service"
							]
						},
						"description": "http://localhost/PublicApi/api/service"
					},
					"response": []
				},
				{
					"name": "Service Create_Successful inactive",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/*Se guarda en la variable \"RandNameService2\" una palabra aleatoria para usarla como nombre y descripción*/\r",
									"var RandNameService2 = pm.variables.replaceIn('{{$randomLoremWords}}');\r",
									"pm.variables.set('RandNameService2', RandNameService2);\r",
									"console.log ('Imprime Variable Random ' + RandNameService2);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Creation Of Service\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdSkill1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"UpdateNameSkill1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdSla1\");\r",
									"\r",
									"/*Se guarda el json de la respuesta*/\r",
									"var data = pm.response.json();\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"IdService2\", data.id);\r",
									"console.log (data.id);\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"NameService2\", data.name);\r",
									"console.log (data.name);\r",
									"\r",
									"/*Se valida el estado que devuelve el Json*/\r",
									"pm.test(\"Validate State Service\", () => {\r",
									"    pm.expect(data.isActive).to.eql(false);\r",
									"})\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"baseCost\": 10000,\r\n    \"calendarId\": 1,\r\n    \"description\": \"{{RandNameService2}}\",\r\n    \"executionTime\": 0,\r\n    \"id\": 0,\r\n    \"isActive\": false,\r\n    \"isDefault\": true,\r\n    \"isPriorityOrEmergency\": false,\r\n    \"isProvideAllCIs\": false,\r\n    \"modelId\": 1,\r\n    \"name\": \"{{RandNameService2}}\",\r\n    \"olaId\": 3,\r\n    \"projectId\": null,\r\n    \"providerAssignmentType\": 1,\r\n    \"slaId\": {{IdSla1}},\r\n    \"subjectDefault\": \"\",\r\n    \"timePlanning\": 30,\r\n    \"type\": 1,\r\n    \"ucId\": 2,\r\n    \"skills\": [\r\n    {\r\n      \"description\": \"{{UpdateNameSkill1}}\",\r\n      \"id\": {{IdSkill1}},\r\n      \"isActive\": true,\r\n      \"name\": \"{{UpdateNameSkill1}}\"\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/service",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"service"
							]
						},
						"description": "http://localhost/PublicApi/api/service"
					},
					"response": []
				},
				{
					"name": "Service Create_Failed required fields",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Creation Failed Service Required Fields\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"baseCost\": 0,\r\n    \"calendarId\": 0,\r\n    \"description\": \"\",\r\n    \"executionTime\": 0,\r\n    \"id\": 0,\r\n    \"isActive\": true,\r\n    \"isDefault\": true,\r\n    \"isPriorityOrEmergency\": true,\r\n    \"isProvideAllCIs\": false,\r\n    \"modelId\": 0,\r\n    \"name\": \"\",\r\n    \"olaId\": 0,\r\n    \"projectId\": null,\r\n    \"providerAssignmentType\": 0,\r\n    \"slaId\": 0,\r\n    \"subjectDefault\": \"\",\r\n    \"timePlanning\": 0,\r\n    \"type\": 0,\r\n    \"ucId\": 0,\r\n   \t\"skills\": [\r\n    {\r\n      \"description\": \"\",\r\n      \"id\": 0,\r\n      \"isActive\": true,\r\n      \"name\": \"\"\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/service",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"service"
							]
						},
						"description": "http://localhost/PublicApi/api/service"
					},
					"response": []
				},
				{
					"name": "Service Create_Failed exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Creation Failed - Other Service Exist With The Same Name.\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"NameService1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdSkill1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"UpdateNameSkill1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdSla1\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"baseCost\": 10000,\r\n    \"calendarId\": 1,\r\n    \"description\": \"{{NameService1}}\",\r\n    \"executionTime\": 0,\r\n    \"id\": 0,\r\n    \"isActive\": true,\r\n    \"isDefault\": true,\r\n    \"isPriorityOrEmergency\": true,\r\n    \"isProvideAllCIs\": false,\r\n    \"modelId\": 1,\r\n    \"name\": \"{{NameService1}}\",\r\n    \"olaId\": 5,\r\n    \"projectId\": null,\r\n    \"providerAssignmentType\": 1,\r\n    \"slaId\": {{IdSla1}},\r\n    \"subjectDefault\": \"\",\r\n    \"timePlanning\": 30,\r\n    \"type\": 2,\r\n    \"ucId\": 6,\r\n   \t\"skills\": [\r\n    {\r\n      \"description\": \"{{UpdateNameSkill1}}\",\r\n      \"id\": {{IdSkill1}},\r\n      \"isActive\": true,\r\n      \"name\": \"{{UpdateNameSkill1}}\"\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/service",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"service"
							]
						},
						"description": "http://localhost/PublicApi/api/service"
					},
					"response": []
				},
				{
					"name": "Service Create_Failed field length",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Creation Failed Of Service Maxlength\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"baseCost\": 10000,\r\n    \"calendarId\": 1,\r\n    \"description\": \"It is a long established fact that a reader will be distracted by the readable content of a page when looking\",\r\n    \"executionTime\": 0,\r\n    \"id\": 0,\r\n    \"isActive\": true,\r\n    \"isDefault\": true,\r\n    \"isPriorityOrEmergency\": true,\r\n    \"isProvideAllCIs\": false,\r\n    \"modelId\": 1,\r\n    \"name\": \"It is a long established fact that a reader will be distracted by the readable content of a page when looking\",\r\n    \"olaId\": 5,\r\n    \"projectId\": null,\r\n    \"providerAssignmentType\": 1,\r\n    \"slaId\": 6,\r\n    \"subjectDefault\": \"It is a long established fact that a reader will be distracted by the readable content of a page when looking\",\r\n    \"timePlanning\": 30,\r\n    \"type\": 2,\r\n    \"ucId\": 6,\r\n   \t\"skills\": [\r\n    {\r\n      \"description\": \"\",\r\n      \"id\": 4,\r\n      \"isActive\": true,\r\n      \"name\": \"\"\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/service",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"service"
							]
						},
						"description": "http://localhost/PublicApi/api/service"
					},
					"response": []
				},
				{
					"name": "Service Update_Successful",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/*Se guarda en la variable \"UpdateRandNameService1\" una palabra aleatoria para usarla como nombre y descripción*/\r",
									"var UpdateRandNameService1 = pm.variables.replaceIn('{{$randomLoremWords}}');\r",
									"pm.variables.set('UpdateRandNameService1', UpdateRandNameService1);\r",
									"console.log ('Imprime Variable Random ' + UpdateRandNameService1);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Update Of Service\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdSkill1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"UpdateNameSkill1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdService1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdSla1\");\r",
									"\r",
									"/*Se guarda el json de la respuesta*/\r",
									"var data = pm.response.json();\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"UpdateNameService1\", data.name);\r",
									"console.log (data.name);\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"baseCost\": 12400,\n    \"calendarId\": 1,\n    \"description\": \"{{UpdateRandNameService1}}\",\n    \"executionTime\": 30,\n    \"id\": {{IdService1}},\n    \"isActive\": true,\n    \"isDefault\": true,\n    \"isPriorityOrEmergency\": true,\n    \"isProvideAllCIs\": false,\n    \"modelId\": 1,\n    \"name\": \"{{UpdateRandNameService1}}\",\n    \"olaId\": 3,\n    \"projectId\": null,\n    \"providerAssignmentType\": 1,\n    \"slaId\": {{IdSla1}},\n    \"subjectDefault\": \"Pruebas AFLS\",\n    \"timePlanning\": 40,\n    \"type\": 2,\n    \"ucId\": 2,\n    \"additionalFields\": null,\n    \"productsServices\": [],\n    \"providers\": [],\n    \"serviceTasks\": null,\n    \"skills\": [\n        {\n            \"description\": \"{{UpdateNameSkill1}}\",\n            \"id\": {{IdSkill1}},\n            \"isActive\": true,\n            \"name\": \"{{UpdateNameSkill1}}\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/service/{{IdService1}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"service",
								"{{IdService1}}"
							]
						},
						"description": "http://localhost/PublicApi/api/service/{id}"
					},
					"response": []
				},
				{
					"name": "Service Update_Successful active",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Update Of Service Active\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdService2\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"NameService2\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdSkill1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"UpdateNameSkill1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdSla1\");\r",
									"\r",
									"/*Se guarda el json de la respuesta*/\r",
									"var data = pm.response.json();\r",
									"\r",
									"/*Se valida el estado que devuelve el Json*/\r",
									"pm.test(\"Validate State Service\", () => {\r",
									"    pm.expect(data.isActive).to.eql(true);\r",
									"})\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"baseCost\": 12400,\n    \"calendarId\": 1,\n    \"description\": \"{{NameService2}}\",\n    \"executionTime\": 30,\n    \"id\": {{IdService2}},\n    \"isActive\": true,\n    \"isDefault\": true,\n    \"isPriorityOrEmergency\": true,\n    \"isProvideAllCIs\": false,\n    \"modelId\": 1,\n    \"name\": \"{{NameService2}}\",\n    \"olaId\": 3,\n    \"projectId\": null,\n    \"providerAssignmentType\": 1,\n    \"slaId\": {{IdSla1}},\n    \"subjectDefault\": \"Asunto\",\n    \"timePlanning\": 30,\n    \"type\": 2,\n    \"ucId\": 2,\n    \"additionalFields\": null,\n    \"productsServices\": [],\n    \"providers\": [],\n    \"serviceTasks\": null,\n    \"skills\": [\n        {\n            \"description\": \"{{UpdateNameSkill1}}\",\n            \"id\": {{IdSkill1}},\n            \"isActive\": true,\n            \"name\": \"{{UpdateNameSkill1}}\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/service/{{IdService2}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"service",
								"{{IdService2}}"
							]
						},
						"description": "http://localhost/PublicApi/api/service/{id}"
					},
					"response": []
				},
				{
					"name": "Service Update_Failed required fields",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Update Failed Service Required Fields\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdService1\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"baseCost\": 0,\n    \"calendarId\": 0,\n    \"description\": \"\",\n    \"executionTime\": 0,\n    \"id\": {{IdService1}},\n    \"isActive\": true,\n    \"isDefault\": true,\n    \"isPriorityOrEmergency\": true,\n    \"isProvideAllCIs\": false,\n    \"modelId\": 0,\n    \"name\": \"\",\n    \"olaId\": 0,\n    \"projectId\": null,\n    \"providerAssignmentType\": 0,\n    \"slaId\": 0,\n    \"subjectDefault\": \"\",\n    \"timePlanning\": 0,\n    \"type\": 0,\n    \"ucId\": 0,\n    \"additionalFields\": null,\n    \"productsServices\": [],\n    \"providers\": [],\n    \"serviceTasks\": null,\n    \"skills\": [\n        {\n            \"description\": \"\",\n            \"id\": 0,\n            \"isActive\": true,\n            \"name\": \"\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/service/{{IdService1}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"service",
								"{{IdService1}}"
							]
						},
						"description": "http://localhost/PublicApi/api/service/{id}"
					},
					"response": []
				},
				{
					"name": "Service Update_Failed exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Update Failed - Other Service Exist With The Same Name.\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdService1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"NameService2\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdSkill1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"UpdateNameSkill1\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"baseCost\": 12400,\n    \"calendarId\": 1,\n    \"description\": \"{{NameService2}}\",\n    \"executionTime\": 30,\n    \"id\": {{IdService1}},\n    \"isActive\": true,\n    \"isDefault\": true,\n    \"isPriorityOrEmergency\": true,\n    \"isProvideAllCIs\": false,\n    \"modelId\": 1,\n    \"name\": \"{{NameService2}}\",\n    \"olaId\": 3,\n    \"projectId\": null,\n    \"providerAssignmentType\": 1,\n    \"slaId\": 1,\n    \"subjectDefault\": \"Asunto\",\n    \"timePlanning\": 30,\n    \"type\": 2,\n    \"ucId\": 2,\n    \"additionalFields\": null,\n    \"productsServices\": [],\n    \"providers\": [],\n    \"serviceTasks\": null,\n    \"skills\": [\n        {\n            \"description\": \"{{UpdateNameSkill1}}\",\n            \"id\": {{IdSkill1}},\n            \"isActive\": true,\n            \"name\": \"{{UpdateNameSkill1}}\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/service/{{IdService1}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"service",
								"{{IdService1}}"
							]
						},
						"description": "http://localhost/PublicApi/api/service/{id}"
					},
					"response": []
				},
				{
					"name": "Service Update_Failed field length",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Update Failed Of Service Maxlength\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdSkill1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"UpdateNameSkill1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdService1\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"baseCost\": 12400,\n    \"calendarId\": 1,\n    \"description\": \"It is a long established fact that a reader will be distracted by the readable content of a page when looking\",\n    \"executionTime\": 30,\n    \"id\": {{IdService1}},\n    \"isActive\": true,\n    \"isDefault\": true,\n    \"isPriorityOrEmergency\": true,\n    \"isProvideAllCIs\": false,\n    \"modelId\": 1,\n    \"name\": \"It is a long established fact that a reader will be distracted by the readable content of a page when looking\",\n    \"olaId\": 3,\n    \"projectId\": null,\n    \"providerAssignmentType\": 1,\n    \"slaId\": 1,\n    \"subjectDefault\": \"It is a long established fact that a reader will be distracted by the readable content of a page when looking\",\n    \"timePlanning\": 30,\n    \"type\": 2,\n    \"ucId\": 2,\n    \"additionalFields\": null,\n    \"productsServices\": [],\n    \"providers\": [],\n    \"serviceTasks\": null,\n    \"skills\": [\n        {\n            \"description\": \"{{UpdateNameSkill1}}\",\n            \"id\": {{IdSkill1}},\n            \"isActive\": true,\n            \"name\": \"{{UpdateNameSkill1}}\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/service/{{IdService1}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"service",
								"{{IdService1}}"
							]
						},
						"description": "http://localhost/PublicApi/api/service/{id}"
					},
					"response": []
				},
				{
					"name": "Service by ID_Successful",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Read Of Service\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdService1\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{API_WS_URL}}/service/{{IdService1}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"service",
								"{{IdService1}}"
							]
						},
						"description": "http://localhost/PublicApi/api/service/{id}"
					},
					"response": []
				},
				{
					"name": "Service by ID_Failed not exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"No Information Found\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{API_WS_URL}}/service/1000",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"service",
								"1000"
							]
						},
						"description": "http://localhost/PublicApi/api/service/{id}"
					},
					"response": []
				},
				{
					"name": "Services List_Successful",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful List Of Service\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"NameService2\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"word\": \"{{NameService2}}\",\r\n  \"page\": 0,\r\n  \"rows\": 0\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/service/list",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"service",
								"list"
							]
						},
						"description": "http://localhost/PublicApi/api/service/list"
					},
					"response": []
				},
				{
					"name": "Services List_Failed not exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"No Information Found\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"word\": \"PREBAS\",\r\n  \"page\": 0,\r\n  \"rows\": 0\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/service/list",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"service",
								"list"
							]
						},
						"description": "http://localhost/PublicApi/api/service/list"
					},
					"response": []
				},
				{
					"name": "Service Delete_Successful",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Delete Of Service\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdService2\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{API_WS_URL}}/service/{{IdService2}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"service",
								"{{IdService2}}"
							]
						},
						"description": "http://localhost/PublicApi/api/service/{id}"
					},
					"response": []
				},
				{
					"name": "Service Delete_Failed used",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Record In Use, Cannot Be Deleted.\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{API_WS_URL}}/service/1",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"service",
								"1"
							]
						},
						"description": "http://localhost/PublicApi/api/service/{id}"
					},
					"response": []
				},
				{
					"name": "Service Delete_Failed not exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"The Service, No Found.\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{API_WS_URL}}/service/1000",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"service",
								"1000"
							]
						},
						"description": "http://localhost/PublicApi/api/service/{id}"
					},
					"response": []
				}
			],
			"description": "Apis de Servicios"
		},
		{
			"name": "5. Companies",
			"item": [
				{
					"name": "Company Create_Successful",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/*Se guarda en la variable \"RandNameCompany1\" una palabra aleatoria para usarla como nombre y descripción*/\r",
									"var RandNameCompany1 = pm.variables.replaceIn('{{$randomLoremWords}}');\r",
									"pm.variables.set('RandNameCompany1', RandNameCompany1);\r",
									"console.log ('Imprime Variable Random ' + RandNameCompany1);\r",
									"\r",
									"/*Se guarda en la variable \"RandUniqueRefCompany1\" un numero aleatorio para usarlo como unica referencia*/\r",
									"var RandUniqueRefCompany1 = pm.variables.replaceIn('{{$randomBankAccount}}');\r",
									"pm.variables.set('RandUniqueRefCompany1', RandUniqueRefCompany1);\r",
									"console.log ('Imprime Variable Random ' + RandUniqueRefCompany1);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Creation Of Company\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdService1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"UpdateNameService1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdSla1\");\r",
									"\r",
									"/*Se guarda el json de la respuesta*/\r",
									"var data = pm.response.json();\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"IdCompany1\", data.id);\r",
									"console.log (data.id);\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"NameCompany1\", data.name);\r",
									"console.log (data.name);\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"UniqueReferenceCompany1\", data.uniqueReference);\r",
									"console.log (data.uniqueReference);\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"address\": \"Av. Caracas #57-08, Bogotá, Colombia\",\r\n  \"contactEmail\": \"redeban@compania.com\",\r\n  \"contactName\": \"Claudia Marin\",\r\n  \"contactPhone\": \"3016153272\",\r\n  \"id\": 0,\r\n  \"importedFrom\": null,\r\n  \"isActive\": true,\r\n  \"isImported\": false,\r\n  \"latitude\": 4.6554621,\r\n  \"longitude\": -74.0640473,\r\n  \"name\": \"{{RandNameCompany1}}\",\r\n  \"uniqueReference\": \"{{RandUniqueRefCompany1}}\",\r\n  \"services\": [\r\n    {\r\n      \"description\": \"{{UpdateNameService1}}\",\r\n      \"id\": {{IdService1}},\r\n      \"isActive\": true,\r\n      \"name\": \"{{UpdateNameService1}}\",\r\n      \"slaId\": {{IdSla1}}\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/company",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"company"
							]
						},
						"description": "http://localhost/PublicApi/api/company"
					},
					"response": []
				},
				{
					"name": "Company Create_Successful inactive",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/*Se guarda en la variable \"RandNameCompany2\" una palabra aleatoria para usarla como nombre y descripción*/\r",
									"var RandNameCompany2 = pm.variables.replaceIn('{{$randomLoremWords}}');\r",
									"pm.variables.set('RandNameCompany2', RandNameCompany2);\r",
									"console.log ('Imprime Variable Random ' + RandNameCompany2);\r",
									"\r",
									"/*Se guarda en la variable \"RandUniqueRefCompany2\" un numero aleatorio para usarlo como unica referencia*/\r",
									"var RandUniqueRefCompany2 = pm.variables.replaceIn('{{$randomBankAccount}}');\r",
									"pm.variables.set('RandUniqueRefCompany2', RandUniqueRefCompany2);\r",
									"console.log ('Imprime Variable Random ' + RandUniqueRefCompany2);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Creation Of Company\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdService1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"UpdateNameService1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdSla1\");\r",
									"\r",
									"/*Se guarda el json de la respuesta*/\r",
									"var data = pm.response.json();\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"IdCompany2\", data.id);\r",
									"console.log (data.id);\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"NameCompany2\", data.name);\r",
									"console.log (data.name);\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"UniqueReferenceCompany2\", data.uniqueReference);\r",
									"console.log (data.uniqueReference);\r",
									"\r",
									"/*Se valida el estado que devuelve el Json*/\r",
									"pm.test(\"Validate State Company\", () => {\r",
									"    pm.expect(data.isActive).to.eql(false);\r",
									"})\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"address\": \"\",\r\n  \"contactEmail\": \"Aranda@compania.com\",\r\n  \"contactName\": \"Claudia Marin\",\r\n  \"contactPhone\": \"3016153272\",\r\n  \"id\": 0,\r\n  \"importedFrom\": null,\r\n  \"isActive\": false,\r\n  \"isImported\": false,\r\n  \"latitude\": 0,\r\n  \"longitude\": 0,\r\n  \"name\": \"{{RandNameCompany2}}\",\r\n  \"uniqueReference\": \"{{RandUniqueRefCompany2}}\",\r\n  \"services\": [\r\n    {\r\n      \"description\": \"{{UpdateNameService1}}\",\r\n      \"id\": {{IdService1}},\r\n      \"isActive\": true,\r\n      \"name\": \"{{UpdateNameService1}}\",\r\n      \"slaId\": {{IdSla1}}\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/company",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"company"
							]
						},
						"description": "http://localhost/PublicApi/api/company"
					},
					"response": []
				},
				{
					"name": "Company Create_Failed required fields",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Creation Failed Company Required Fields\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"address\": \"P&P Topografos, 27A-57, Calle 45, Ciudad Universitaria, Teusaquillo, Bogotá, Distrito Capital, 11311, Colombia\",\r\n  \"contactEmail\": \"pruebas@compania.com\",\r\n  \"contactName\": \"\",\r\n  \"contactPhone\": \"\",\r\n  \"id\": 0,\r\n  \"importedFrom\": null,\r\n  \"isActive\": true,\r\n  \"isImported\": false,\r\n  \"latitude\": 4.68547,\r\n  \"longitude\": -74.562125,\r\n  \"name\": \"\",\r\n  \"uniqueReference\": \"\"\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/company",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"company"
							]
						},
						"description": "http://localhost/PublicApi/api/company"
					},
					"response": []
				},
				{
					"name": "Company Create_Failed telephone/email",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/*Se guarda en la variable \"RandNameCompany3\" una palabra aleatoria para usarla como nombre y descripción*/\r",
									"var RandNameCompany3 = pm.variables.replaceIn('{{$randomLoremWords}}');\r",
									"pm.variables.set('RandNameCompany3', RandNameCompany3);\r",
									"console.log ('Imprime Variable Random ' + RandNameCompany3);\r",
									"\r",
									"/*Se guarda en la variable \"RandUniqueRefCompany3\" un numero aleatorio para usarlo como unica referencia*/\r",
									"var RandUniqueRefCompany3 = pm.variables.replaceIn('{{$randomBankAccount}}');\r",
									"pm.variables.set('RandUniqueRefCompany3', RandUniqueRefCompany3);\r",
									"console.log ('Imprime Variable Random ' + RandUniqueRefCompany3);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Creation Failed Company Telephone/Email\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdService1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"UpdateNameService1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdSla1\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"address\": \"P&P Topografos, 27A-57, Calle 45, Ciudad Universitaria, Teusaquillo, Bogotá, Distrito Capital, 11311, Colombia\",\r\n  \"contactEmail\": \"pruebas@compan\",\r\n  \"contactName\": \"\",\r\n  \"contactPhone\": \"123\",\r\n  \"id\": 0,\r\n  \"importedFrom\": null,\r\n  \"isActive\": true,\r\n  \"isImported\": false,\r\n  \"latitude\": 4.68547,\r\n  \"longitude\": -74.562125,\r\n  \"name\": \"{{RandNameCompany3}}\",\r\n  \"uniqueReference\": \"{{RandUniqueRefCompany3}}\",\r\n  \"additionalFields\": [],\r\n  \"services\": [\r\n    {\r\n      \"description\": \"{{UpdateNameService1}}\",\r\n      \"id\": {{IdService1}},\r\n      \"isActive\": true,\r\n      \"name\": \"{{UpdateNameService1}}\",\r\n      \"slaId\": {{IdSla1}}\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/company",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"company"
							]
						},
						"description": "http://localhost/PublicApi/api/company"
					},
					"response": []
				},
				{
					"name": "Company Create_Failed address",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/*Se guarda en la variable \"RandNameCompany4\" una palabra aleatoria para usarla como nombre y descripción*/\r",
									"var RandNameCompany4 = pm.variables.replaceIn('{{$randomLoremWords}}');\r",
									"pm.variables.set('RandNameCompany4', RandNameCompany4);\r",
									"console.log ('Imprime Variable Random ' + RandNameCompany4);\r",
									"\r",
									"/*Se guarda en la variable \"RandUniqueRefCompany4\" un numero aleatorio para usarlo como unica referencia*/\r",
									"var RandUniqueRefCompany4 = pm.variables.replaceIn('{{$randomBankAccount}}');\r",
									"pm.variables.set('RandUniqueRefCompany4', RandUniqueRefCompany4);\r",
									"console.log ('Imprime Variable Random ' + RandUniqueRefCompany4);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Creation Failed Company Address\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdService1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"UpdateNameService1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdSla1\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"address\": \"rdgdsggdfg\",\r\n  \"contactEmail\": \"pruebas@compania.com\",\r\n  \"contactName\": \"\",\r\n  \"contactPhone\": \"365656565656\",\r\n  \"id\": 0,\r\n  \"importedFrom\": null,\r\n  \"isActive\": true,\r\n  \"isImported\": false,\r\n  \"latitude\": 0,\r\n  \"longitude\": -74.562125,\r\n  \"name\": \"{{RandNameCompany4}}\",\r\n  \"uniqueReference\": \"{{RandUniqueRefCompany4}}\",\r\n  \"services\": [\r\n    {\r\n      \"description\": \"{{UpdateNameService1}}\",\r\n      \"id\": {{IdService1}},\r\n      \"isActive\": true,\r\n      \"name\": \"{{UpdateNameService1}}\",\r\n      \"slaId\": {{IdSla1}}\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/company",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"company"
							]
						},
						"description": "http://localhost/PublicApi/api/company"
					},
					"response": []
				},
				{
					"name": "Company Create_Failed exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Creation Failed - Other Company Exist With The Same Name.\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"NameCompany1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"UniqueReferenceCompany1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdService1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"UpdateNameService1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdSla1\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"address\": \"Av. Caracas #57-08, Bogotá, Colombia\",\r\n  \"contactEmail\": \"redeban@compania.com\",\r\n  \"contactName\": \"Claudia Marin\",\r\n  \"contactPhone\": \"3016153272\",\r\n  \"id\": 0,\r\n  \"importedFrom\": null,\r\n  \"isActive\": true,\r\n  \"isImported\": false,\r\n  \"latitude\": 4.6554621,\r\n  \"longitude\": -74.0640473,\r\n  \"name\": \"{{NameCompany1}}\",\r\n  \"uniqueReference\": \"{{UniqueReferenceCompany1}}\",\r\n  \"services\": [\r\n    {\r\n      \"description\": \"{{UpdateNameService1}}\",\r\n      \"id\": {{IdService1}},\r\n      \"isActive\": true,\r\n      \"name\": \"{{UpdateNameService1}}\",\r\n      \"slaId\": {{IdSla1}}\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/company",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"company"
							]
						},
						"description": "http://localhost/PublicApi/api/company"
					},
					"response": []
				},
				{
					"name": "Company Create_Failed field length",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Creation Failed Of Company Maxlength\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"address\": \"P&P Topografos, 27A-57, Calle 45, Ciudad Universitaria, Teusaquillo, Bogotá, Distrito Capital, 11311, Colombia\",\r\n  \"contactEmail\": \"pruebas@compania.com\",\r\n  \"contactName\": \"\",\r\n  \"contactPhone\": \"\",\r\n  \"id\": 0,\r\n  \"importedFrom\": null,\r\n  \"isActive\": true,\r\n  \"isImported\": false,\r\n  \"latitude\": 4.68547,\r\n  \"longitude\": -74.562125,\r\n  \"name\": \"It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. \",\r\n  \"uniqueReference\": \"09876543210987654332109876543210987654332143321\",\r\n  \"services\": [\r\n    {\r\n      \"description\": \"\",\r\n      \"id\": 36,\r\n      \"isActive\": true,\r\n      \"name\": \"\",\r\n      \"slaId\": 1\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/company",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"company"
							]
						},
						"description": "http://localhost/PublicApi/api/company"
					},
					"response": []
				},
				{
					"name": "Company Update_Successful",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/*Se guarda en la variable \"UpdateRandNameCompany1\" una palabra aleatoria para usarla como nombre y descripción*/\r",
									"var UpdateRandNameCompany1 = pm.variables.replaceIn('{{$randomLoremWords}}');\r",
									"pm.variables.set('UpdateRandNameCompany1', UpdateRandNameCompany1);\r",
									"console.log ('Imprime Variable Random ' + UpdateRandNameCompany1);\r",
									"\r",
									"/*Se guarda en la variable \"UpdateRandUniqueRefCompany1\" un numero aleatorio para usarlo como unica referencia*/\r",
									"var UpdateRandUniqueRefCompany1 = pm.variables.replaceIn('{{$randomBankAccount}}');\r",
									"pm.variables.set('UpdateRandUniqueRefCompany1', UpdateRandUniqueRefCompany1);\r",
									"console.log ('Imprime Variable Random ' + UpdateRandUniqueRefCompany1);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Update Of Company\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdCompany1\");\r",
									"\r",
									"/*Se guarda el json de la respuesta*/\r",
									"var data = pm.response.json();\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"UpdateNameCompany1\", data.name);\r",
									"console.log (data.name);\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"UpdateUniqueReferenceCompany1\", data.uniqueReference);\r",
									"console.log (data.uniqueReference);\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"address\": \"Cl. 45 ##28-17, Bogotá, Colombia\",\n    \"contactEmail\": \"adipiscing@company.com\",\n    \"contactName\": \"Marlon Ospina\",\n    \"contactPhone\": \"5867364\",\n    \"id\": {{IdCompany1}},\n    \"importedFrom\": null,\n    \"isActive\": true,\n    \"isImported\": false,\n    \"latitude\": 4.6343547,\n    \"longitude\": -74.0785462,\n    \"name\": \"{{UpdateRandNameCompany1}}\",\n    \"uniqueReference\": \"{{UpdateRandUniqueRefCompany1}}\",\n    \"additionalFields\": null,\n    \"services\": null\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/company/{{IdCompany1}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"company",
								"{{IdCompany1}}"
							]
						},
						"description": "http://localhost/PublicApi/api/company/{id}"
					},
					"response": []
				},
				{
					"name": "Company Update_Successful active",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Update Of Company Active\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdCompany2\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"NameCompany2\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"UniqueReferenceCompany2\");\r",
									"\r",
									"/*Se guarda el json de la respuesta*/\r",
									"var data = pm.response.json();\r",
									"\r",
									"/*Se valida el estado que devuelve el Json*/\r",
									"pm.test(\"Validate State Company\", () => {\r",
									"    pm.expect(data.isActive).to.eql(true);\r",
									"})\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"address\": \"Cl. 45 ##28-17, Bogotá, Colombia\",\n    \"contactEmail\": \"correo@mailer.com\",\n    \"contactName\": \"Raul Onzaga\",\n    \"contactPhone\": \"551-8409\",\n    \"id\": {{IdCompany2}},\n    \"importedFrom\": null,\n    \"isActive\": true,\n    \"isImported\": false,\n    \"latitude\": 4.6343547,\n    \"longitude\": -74.0785462,\n    \"name\": \"{{NameCompany2}}\",\n    \"uniqueReference\": \"{{UniqueReferenceCompany2}}\",\n    \"additionalFields\": null,\n    \"services\": null\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/company/{{IdCompany2}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"company",
								"{{IdCompany2}}"
							]
						},
						"description": "http://localhost/PublicApi/api/company/{id}"
					},
					"response": []
				},
				{
					"name": "Company Update_Successful with services",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Update Of Company With Services\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdCompany2\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"NameCompany2\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"UniqueReferenceCompany2\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdService1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"UpdateNameService1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdSla1\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"address\": \"Cl. 45 ##28-17, Bogotá, Colombia\",\n    \"contactEmail\": \"pruebas@mailer.com\",\n    \"contactName\": \"Raul Onzaga\",\n    \"contactPhone\": \"1-628-112-6188\",\n    \"id\": {{IdCompany2}},\n    \"importedFrom\": null,\n    \"isActive\": true,\n    \"isImported\": false,\n    \"latitude\": 4.6343547,\n    \"longitude\": -74.0785462,\n    \"name\": \"{{NameCompany2}}\",\n    \"uniqueReference\": \"{{UniqueReferenceCompany2}}\",\n   \"additionalFields\": null,\n  \"services\": [\n    {\n      \"description\": \"\",\n      \"id\": {{IdService1}},\n      \"isActive\": true,\n      \"name\": \"{{UpdateNameService1}}\",\n      \"slaId\": {{IdSla1}}\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/company/{{IdCompany2}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"company",
								"{{IdCompany2}}"
							]
						},
						"description": "http://localhost/PublicApi/api/company/{id}"
					},
					"response": []
				},
				{
					"name": "Company Update_Failed required fields",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Update Failed Company Required Fields\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdCompany2\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"address\": \"Cl. 45 ##28-17, Bogotá, Colombia\",\n    \"contactEmail\": \"correo@mailer.com\",\n    \"contactName\": \"Raul Onzaga\",\n    \"contactPhone\": \"1-901-203-9080\",\n    \"id\": {{IdCompany2}},\n    \"importedFrom\": null,\n    \"isActive\": true,\n    \"isImported\": false,\n    \"latitude\": 4.6343547,\n    \"longitude\": -74.0785462,\n    \"name\": \"\",\n    \"uniqueReference\": \"\",\n    \"additionalFields\": null,\n    \"services\": null\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/company/{{IdCompany2}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"company",
								"{{IdCompany2}}"
							]
						},
						"description": "http://localhost/PublicApi/api/company/{id}"
					},
					"response": []
				},
				{
					"name": "Company Update_Failed telephone/email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Update Failed Company Telephone/Email\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdCompany2\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"NameCompany2\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"UniqueReferenceCompany2\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"address\": \"Cl. 45 ##28-17, Bogotá, Colombia\",\n    \"contactEmail\": \"correo@mailercom\",\n    \"contactName\": \"Raul Onzaga\",\n    \"contactPhone\": \"9080\",\n    \"id\": {{IdCompany2}},\n    \"importedFrom\": null,\n    \"isActive\": true,\n    \"isImported\": false,\n    \"latitude\": 4.6343547,\n    \"longitude\": -74.0785462,\n    \"name\": \"{{NameCompany2}}\",\n    \"uniqueReference\": \"{{UniqueReferenceCompany2}}\",\n    \"additionalFields\": null,\n    \"services\": null\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/company/{{IdCompany2}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"company",
								"{{IdCompany2}}"
							]
						},
						"description": "http://localhost/PublicApi/api/company/{id}"
					},
					"response": []
				},
				{
					"name": "Company Update_Failed address",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Update Failed Company Address\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdCompany2\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"NameCompany2\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"UniqueReferenceCompany2\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"address\": \"Cl. 45 ##28-17, Bogotá, Colombia\",\n    \"contactEmail\": \"correo@mailer.com\",\n    \"contactName\": \"Raul Onzaga\",\n    \"contactPhone\": \"90804545435\",\n    \"id\": {{IdCompany2}},\n    \"importedFrom\": null,\n    \"isActive\": true,\n    \"isImported\": false,\n    \"latitude\": 0,\n    \"longitude\": -74.0785462,\n    \"name\": \"{{NameCompany2}}\",\n    \"uniqueReference\": \"{{UniqueReferenceCompany2}}\",\n    \"additionalFields\": null,\n    \"services\": null\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/company/{{IdCompany2}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"company",
								"{{IdCompany2}}"
							]
						},
						"description": "http://localhost/PublicApi/api/company/{id}"
					},
					"response": []
				},
				{
					"name": "Company Update_Failed exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Update Failed - Other Company Exist With The Same Name.\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdCompany2\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"UpdateNameCompany1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"UpdateUniqueReferenceCompany1\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"address\": \"Cl. 45 ##28-17, Bogotá, Colombia\",\n    \"contactEmail\": \"correo@mailer.com\",\n    \"contactName\": \"Raul Onzaga\",\n    \"contactPhone\": \"520-5581\",\n    \"id\": {{IdCompany2}},\n    \"importedFrom\": null,\n    \"isActive\": true,\n    \"isImported\": false,\n    \"latitude\": 4.6343547,\n    \"longitude\": -74.0785462,\n    \"name\": \"{{UpdateNameCompany1}}\",\n    \"uniqueReference\": \"{{UpdateUniqueReferenceCompany1}}\",\n    \"additionalFields\": null,\n    \"services\": null\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/company/{{IdCompany2}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"company",
								"{{IdCompany2}}"
							]
						},
						"description": "http://localhost/PublicApi/api/company/{id}"
					},
					"response": []
				},
				{
					"name": "Company Update_Failed field length",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Update Failed Of Company Maxlength\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdCompany2\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"address\": \"Cl. 45 ##28-17, Bogotá, Colombia\",\n    \"contactEmail\": \"correo@mailer.com\",\n    \"contactName\": \"Raul Onzaga\",\n    \"contactPhone\": \"961-4552\",\n    \"id\": {{IdCompany2}},\n    \"importedFrom\": null,\n    \"isActive\": true,\n    \"isImported\": false,\n    \"latitude\": 4.6343547,\n    \"longitude\": -74.0785462,\n    \"name\": \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum\",\n    \"uniqueReference\": \"012345678901234567890012345678901234567890\",\n    \"additionalFields\": null,\n    \"services\": null\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/company/{{IdCompany2}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"company",
								"{{IdCompany2}}"
							]
						},
						"description": "http://localhost/PublicApi/api/company/{id}"
					},
					"response": []
				},
				{
					"name": "Company by ID_Successful",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Read Of Company\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdCompany1\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{API_WS_URL}}/company/{{IdCompany1}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"company",
								"{{IdCompany1}}"
							]
						},
						"description": "http://localhost/PublicApi/api/company{id}"
					},
					"response": []
				},
				{
					"name": "Company by ID_Failed not exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"No Information Found\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{API_WS_URL}}/company/1000",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"company",
								"1000"
							]
						},
						"description": "http://localhost/PublicApi/api/company{id}"
					},
					"response": []
				},
				{
					"name": "Companies List_Successful",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful List Of Company\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"NameCompany2\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"word\": \"{{NameCompany2}}\",\r\n  \"page\": 0,\r\n  \"rows\": 0\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/company/list",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"company",
								"list"
							]
						},
						"description": "http://localhost/PublicApi/api/company/list"
					},
					"response": []
				},
				{
					"name": "Companies List_Failed not exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"No Information Found\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"word\": \"Compadre\",\r\n  \"page\": 0,\r\n  \"rows\": 0\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/company/list",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"company",
								"list"
							]
						},
						"description": "http://localhost/PublicApi/api/company/list"
					},
					"response": []
				},
				{
					"name": "Company Delete_Successful",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Delete Of Company\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdCompany2\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{API_WS_URL}}/company/{{IdCompany2}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"company",
								"{{IdCompany2}}"
							]
						},
						"description": "http://localhost/PublicApi/api/company/{id}"
					},
					"response": []
				},
				{
					"name": "Company Delete_Failed used",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Record In Use, Cannot Be Deleted.\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{API_WS_URL}}/company/1",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"company",
								"1"
							]
						},
						"description": "http://localhost/PublicApi/api/company/{id}"
					},
					"response": []
				},
				{
					"name": "Company Delete_Failed not exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"The Company, No Found.\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{API_WS_URL}}/company/1000",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"company",
								"1000"
							]
						},
						"description": "http://localhost/PublicApi/api/company/{id}"
					},
					"response": []
				}
			],
			"description": "Apis de Compañías"
		},
		{
			"name": "6. Zones",
			"item": [
				{
					"name": "Zone Create_Successful",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/*Se guarda en la variable \"RandNameZone1\" una palabra aleatoria para usarla como nombre y descripción*/\r",
									"var RandNameZone1 = pm.variables.replaceIn('{{$randomLoremWords}}');\r",
									"pm.variables.set('RandNameZone1', RandNameZone1);\r",
									"console.log ('Imprime Variable Random ' + RandNameZone1);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Creation Of Zone\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se guarda el json de la respuesta*/\r",
									"var data = pm.response.json();\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"IdZone1\", data.id);\r",
									"console.log (data.id);\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"NameZone1\", data.name);\r",
									"console.log (data.name);\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"description\": \"{{RandNameZone1}}\",\r\n        \"id\": 0,\r\n        \"isActive\": true,\r\n        \"isDeleted\": false,\r\n        \"name\": \"{{RandNameZone1}}\",\r\n        \"priority\": 2,\r\n        \"providers\": null,\r\n        \"zonePoints\": [\r\n            {\r\n                \"dataOrderId\": 0,\r\n                \"dataX\": -66.58718485104032,\r\n                \"dataY\": -4.5259310578958436,\r\n                \"dataZoneId\": 1,\r\n                \"id\": 1,\r\n                \"isPersisted\": false\r\n            },\r\n            {\r\n                \"dataOrderId\": 1,\r\n                \"dataX\": -66.49929422604032,\r\n                \"dataY\": 12.679041223685751,\r\n                \"dataZoneId\": 1,\r\n                \"id\": 2,\r\n                \"isPersisted\": false\r\n            },\r\n            {\r\n                \"dataOrderId\": 2,\r\n                \"dataX\": -79.77077860104032,\r\n                \"dataY\": 12.893319037006879,\r\n                \"dataZoneId\": 1,\r\n                \"id\": 3,\r\n                \"isPersisted\": false\r\n            },\r\n            {\r\n                \"dataOrderId\": 3,\r\n                \"dataX\": -79.15554422604032,\r\n                \"dataY\": -4.7011426903644686,\r\n                \"dataZoneId\": 1,\r\n                \"id\": 4,\r\n                \"isPersisted\": false\r\n            },\r\n            {\r\n                \"dataOrderId\": 4,\r\n                \"dataX\": -66.58718485104032,\r\n                \"dataY\": -4.5259310578958436,\r\n                \"dataZoneId\": 1,\r\n                \"id\": 5,\r\n                \"isPersisted\": false\r\n            }\r\n        ]\r\n    }"
						},
						"url": {
							"raw": "{{API_WS_URL}}/zone",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"zone"
							]
						},
						"description": "http://localhost/PublicApi/api/zone"
					},
					"response": []
				},
				{
					"name": "Zone Create_Succesfull inactive",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/*Se guarda en la variable \"RandNameZone2\" una palabra aleatoria para usarla como nombre y descripción*/\r",
									"var RandNameZone2 = pm.variables.replaceIn('{{$randomLoremWords}}');\r",
									"pm.variables.set('RandNameZone2', RandNameZone2);\r",
									"console.log ('Imprime Variable Random ' + RandNameZone2);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Creation Of Zone Inactive\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se guarda el json de la respuesta*/\r",
									"var data = pm.response.json();\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"IdZone2\", data.id);\r",
									"console.log (data.id);\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"NameZone2\", data.name);\r",
									"console.log (data.name);\r",
									"\r",
									"/*Se valida el estado que devuelve el Json*/\r",
									"pm.test(\"Validate State Zone\", () => {\r",
									"    pm.expect(data.isActive).to.eql(false);\r",
									"})\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"description\": \"{{RandNameZone2}}\",\r\n  \"id\": 0,\r\n  \"isActive\": false,\r\n  \"isDeleted\": false,\r\n  \"name\": \"{{RandNameZone2}}\",\r\n  \"priority\": 10,\r\n  \"zonePoints\": [\r\n    {\r\n      \"dataX\": -74.23787136187377,\r\n      \"dataY\": 4.545932282812785\r\n    },\r\n    {\r\n      \"dataX\": -74.21126665127869,\r\n      \"dataY\": 4.615006948584266\r\n    },\r\n    {\r\n      \"dataX\": -74.17599994186284,\r\n      \"dataY\": 4.589104731245001\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/zone",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"zone"
							]
						},
						"description": "http://localhost/PublicApi/api/zone"
					},
					"response": []
				},
				{
					"name": "Zone Create_Failed required fields",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Creation Failed Zone Required Fields\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"description\": \"\",\r\n  \"id\": 0,\r\n  \"isActive\": true,\r\n  \"isDeleted\": true,\r\n  \"name\": \"\",\r\n  \"priority\": 10,\r\n  \"providers\": null,\r\n  \"zonePoints\": [\r\n    {\r\n      \"dataX\": 0,\r\n      \"dataY\": 0\r\n    },\r\n    {\r\n      \"dataX\": 0,\r\n      \"dataY\": 0\r\n    },\r\n    {\r\n      \"dataX\": 0,\r\n      \"dataY\": 0\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/zone",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"zone"
							]
						},
						"description": "http://localhost/PublicApi/api/zone"
					},
					"response": []
				},
				{
					"name": "Zone Create_Failed exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Creation Failed - Other Zone Exist With The Same Name.\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"NameZone1\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"description\": \"{{NameZone1}}\",\r\n  \"id\": 0,\r\n  \"isActive\": true,\r\n  \"isDeleted\": true,\r\n  \"name\": \"{{NameZone1}}\",\r\n  \"priority\": 8,\r\n  \"zonePoints\": [\r\n    {\r\n      \"dataX\": 0,\r\n      \"dataY\": 0\r\n    },\r\n    {\r\n      \"dataX\": 0,\r\n      \"dataY\": 0\r\n    },\r\n    {\r\n      \"dataX\": 0,\r\n      \"dataY\": 0\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/zone",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"zone"
							]
						},
						"description": "http://localhost/PublicApi/api/zone"
					},
					"response": []
				},
				{
					"name": "Zone Create_Failed field length",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Creation Failed Of Zone Maxlength\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"description\": \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been Lorem Ipsum has Lorem Ipsum has beenLorem Ipsum has beenbeen\",\r\n  \"id\": 0,\r\n  \"isActive\": true,\r\n  \"isDeleted\": true,\r\n  \"name\": \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been \",\r\n  \"priority\": 6,\r\n  \"zonePoints\": [\r\n    {\r\n      \"dataX\": 0,\r\n      \"dataY\": 0\r\n    },\r\n    {\r\n      \"dataX\": 0,\r\n      \"dataY\": 0\r\n    },\r\n    {\r\n      \"dataX\": 0,\r\n      \"dataY\": 0\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/zone",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"zone"
							]
						},
						"description": "http://localhost/PublicApi/api/zone"
					},
					"response": []
				},
				{
					"name": "Zone Update_Successful",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/*Se guarda en la variable \"UpdateRandNameZone1\" una palabra aleatoria para usarla como nombre y descripción*/\r",
									"var UpdateRandNameZone1 = pm.variables.replaceIn('{{$randomLoremWords}}');\r",
									"pm.variables.set('UpdateRandNameZone1', UpdateRandNameZone1);\r",
									"console.log ('Imprime Variable Random ' + UpdateRandNameZone1);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Update Of Zone\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdZone1\");\r",
									"\r",
									"/*Se guarda el json de la respuesta*/\r",
									"var data = pm.response.json();\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"UpdateNameZone1\", data.name);\r",
									"console.log (data.name);\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"{{UpdateRandNameZone1}}\",\n    \"id\": {{IdZone1}},\n    \"isActive\": true,\n    \"isDeleted\": false,\n    \"name\": \"{{UpdateRandNameZone1}}\",\n    \"priority\": 4,\n    \"providers\": null,\n    \"zonePoints\": [\n        {\n            \"dataOrderId\": 0,\n            \"dataX\": -73.344350238465978,\n            \"dataY\": 5.601959290995099,\n            \"dataZoneId\": 12,\n            \"id\": 143\n        },\n        {\n            \"dataOrderId\": 1,\n            \"dataX\": -73.313794513368322,\n            \"dataY\": 5.5882918085995614,\n            \"dataZoneId\": 12,\n            \"id\": 144\n        },\n        {\n            \"dataOrderId\": 2,\n            \"dataX\": -73.347096820497228,\n            \"dataY\": 5.5073054568104931,\n            \"dataZoneId\": 12,\n            \"id\": 145\n        },\n        {\n            \"dataOrderId\": 3,\n            \"dataX\": -73.396191974305822,\n            \"dataY\": 5.5240503809595589,\n            \"dataZoneId\": 12,\n            \"id\": 146\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/zone/{{IdZone1}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"zone",
								"{{IdZone1}}"
							]
						},
						"description": "http://localhost/PublicApi/api/zone/{id}"
					},
					"response": []
				},
				{
					"name": "Zone Update_Successful Active",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Update Of Zone Active\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdZone2\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"NameZone2\");\r",
									"\r",
									"/*Se guarda el json de la respuesta*/\r",
									"var data = pm.response.json();\r",
									"\r",
									"/*Se valida el estado que devuelve el Json*/\r",
									"pm.test(\"Validate State Zone\", () => {\r",
									"    pm.expect(data.isActive).to.eql(true);\r",
									"})\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"{{NameZone2}}\",\n    \"id\": {{IdZone2}},\n    \"isActive\": true,\n    \"isDeleted\": false,\n    \"name\": \"{{NameZone2}}\",\n    \"priority\": 2,\n    \"providers\": null,\n    \"zonePoints\": [\n        {\n            \"dataOrderId\": 0,\n            \"dataX\": -75.771503448486314,\n            \"dataY\": 4.8185096996895282,\n            \"dataZoneId\": 10,\n            \"id\": 117\n        },\n        {\n            \"dataOrderId\": 1,\n            \"dataX\": -75.771503448486314,\n            \"dataY\": 4.8061936507389049,\n            \"dataZoneId\": 10,\n            \"id\": 118\n        },\n        {\n            \"dataOrderId\": 2,\n            \"dataX\": -75.762233734130859,\n            \"dataY\": 4.7979828277364049,\n            \"dataZoneId\": 10,\n            \"id\": 119\n        },\n        {\n            \"dataOrderId\": 3,\n            \"dataX\": -75.738887786865234,\n            \"dataY\": 4.79182464566,\n            \"dataZoneId\": 10,\n            \"id\": 120\n        },\n        {\n            \"dataOrderId\": 4,\n            \"dataX\": -75.724468231201172,\n            \"dataY\": 4.78053450112958,\n            \"dataZoneId\": 10,\n            \"id\": 121\n        },\n        {\n            \"dataOrderId\": 5,\n            \"dataX\": -75.70592880249022,\n            \"dataY\": 4.7829293958346,\n            \"dataZoneId\": 10,\n            \"id\": 122\n        },\n        {\n            \"dataOrderId\": 6,\n            \"dataX\": -75.685672760009751,\n            \"dataY\": 4.77813959805286,\n            \"dataZoneId\": 10,\n            \"id\": 123\n        },\n        {\n            \"dataOrderId\": 7,\n            \"dataX\": -75.6606101989746,\n            \"dataY\": 4.7815608855999443,\n            \"dataZoneId\": 10,\n            \"id\": 124\n        },\n        {\n            \"dataOrderId\": 8,\n            \"dataX\": -75.655117034912109,\n            \"dataY\": 4.8037988375754423,\n            \"dataZoneId\": 10,\n            \"id\": 125\n        },\n        {\n            \"dataOrderId\": 9,\n            \"dataX\": -75.679149627685547,\n            \"dataY\": 4.8191939180929779,\n            \"dataZoneId\": 10,\n            \"id\": 126\n        },\n        {\n            \"dataOrderId\": 10,\n            \"dataX\": -75.695285797119141,\n            \"dataY\": 4.8277465899807339,\n            \"dataZoneId\": 10,\n            \"id\": 127\n        },\n        {\n            \"dataOrderId\": 11,\n            \"dataX\": -75.725841522216783,\n            \"dataY\": 4.8315097314629867,\n            \"dataZoneId\": 10,\n            \"id\": 128\n        },\n        {\n            \"dataOrderId\": 12,\n            \"dataX\": -75.741977691650376,\n            \"dataY\": 4.830483422220837,\n            \"dataZoneId\": 10,\n            \"id\": 129\n        },\n        {\n            \"dataOrderId\": 13,\n            \"dataX\": -75.761890411376953,\n            \"dataY\": 4.8222728923823155,\n            \"dataZoneId\": 10,\n            \"id\": 130\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/zone/{{IdZone2}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"zone",
								"{{IdZone2}}"
							]
						},
						"description": "http://localhost/PublicApi/api/zone/{id}"
					},
					"response": []
				},
				{
					"name": "Zone Update_Failed required fields",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Update Failed Zone Required Fields\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdZone2\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"\",\n    \"id\": {{IdZone2}},\n    \"isActive\": true,\n    \"isDeleted\": false,\n    \"name\": \"\",\n    \"priority\": 2,\n    \"providers\": null,\n    \"zonePoints\": [\n        {\n            \"dataOrderId\": 0,\n            \"dataX\": -75.771503448486314,\n            \"dataY\": 4.8185096996895282,\n            \"dataZoneId\": 10,\n            \"id\": 117\n        },\n        {\n            \"dataOrderId\": 1,\n            \"dataX\": -75.771503448486314,\n            \"dataY\": 4.8061936507389049,\n            \"dataZoneId\": 10,\n            \"id\": 118\n        },\n        {\n            \"dataOrderId\": 2,\n            \"dataX\": -75.762233734130859,\n            \"dataY\": 4.7979828277364049,\n            \"dataZoneId\": 10,\n            \"id\": 119\n        },\n        {\n            \"dataOrderId\": 3,\n            \"dataX\": -75.738887786865234,\n            \"dataY\": 4.79182464566,\n            \"dataZoneId\": 10,\n            \"id\": 120\n        },\n        {\n            \"dataOrderId\": 4,\n            \"dataX\": -75.724468231201172,\n            \"dataY\": 4.78053450112958,\n            \"dataZoneId\": 10,\n            \"id\": 121\n        },\n        {\n            \"dataOrderId\": 5,\n            \"dataX\": -75.70592880249022,\n            \"dataY\": 4.7829293958346,\n            \"dataZoneId\": 10,\n            \"id\": 122\n        },\n        {\n            \"dataOrderId\": 6,\n            \"dataX\": -75.685672760009751,\n            \"dataY\": 4.77813959805286,\n            \"dataZoneId\": 10,\n            \"id\": 123\n        },\n        {\n            \"dataOrderId\": 7,\n            \"dataX\": -75.6606101989746,\n            \"dataY\": 4.7815608855999443,\n            \"dataZoneId\": 10,\n            \"id\": 124\n        },\n        {\n            \"dataOrderId\": 8,\n            \"dataX\": -75.655117034912109,\n            \"dataY\": 4.8037988375754423,\n            \"dataZoneId\": 10,\n            \"id\": 125\n        },\n        {\n            \"dataOrderId\": 9,\n            \"dataX\": -75.679149627685547,\n            \"dataY\": 4.8191939180929779,\n            \"dataZoneId\": 10,\n            \"id\": 126\n        },\n        {\n            \"dataOrderId\": 10,\n            \"dataX\": -75.695285797119141,\n            \"dataY\": 4.8277465899807339,\n            \"dataZoneId\": 10,\n            \"id\": 127\n        },\n        {\n            \"dataOrderId\": 11,\n            \"dataX\": -75.725841522216783,\n            \"dataY\": 4.8315097314629867,\n            \"dataZoneId\": 10,\n            \"id\": 128\n        },\n        {\n            \"dataOrderId\": 12,\n            \"dataX\": -75.741977691650376,\n            \"dataY\": 4.830483422220837,\n            \"dataZoneId\": 10,\n            \"id\": 129\n        },\n        {\n            \"dataOrderId\": 13,\n            \"dataX\": -75.761890411376953,\n            \"dataY\": 4.8222728923823155,\n            \"dataZoneId\": 10,\n            \"id\": 130\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/zone/{{IdZone2}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"zone",
								"{{IdZone2}}"
							]
						},
						"description": "http://localhost/PublicApi/api/zone/{id}"
					},
					"response": []
				},
				{
					"name": "Zone Update_Failed exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Update Failed - Other Zone Exist With The Same Name.\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdZone2\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"UpdateNameZone1\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"{{UpdateNameZone1}}\",\n    \"id\": {{IdZone2}},\n    \"isActive\": true,\n    \"isDeleted\": false,\n    \"name\": \"{{UpdateNameZone1}}\",\n    \"priority\": 6,\n    \"zonePoints\": [\n        {\n            \"dataOrderId\": 0,\n            \"dataX\": -74.227657858855721,\n            \"dataY\": 4.5672956339334974,\n            \"dataZoneId\": 12,\n            \"id\": 143\n        },\n        {\n            \"dataOrderId\": 0,\n            \"dataX\": -74.226128403586159,\n            \"dataY\": 4.58224637915437,\n            \"dataZoneId\": 12,\n            \"id\": 144\n        },\n        {\n            \"dataOrderId\": 0,\n            \"dataX\": -74.2114752353108,\n            \"dataY\": 4.5829348927791358,\n            \"dataZoneId\": 12,\n            \"id\": 145\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/zone/{{IdZone2}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"zone",
								"{{IdZone2}}"
							]
						},
						"description": "http://localhost/PublicApi/api/zone/{id}"
					},
					"response": []
				},
				{
					"name": "Zone Update_Failed field length",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Update Failed Of Zone Maxlength\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdZone2\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. It is a long established fact that a reader will be distracted by the readable content of a page when looking at its acted by the relayout. \",\n    \"id\": {{IdZone2}},\n    \"isActive\": true,\n    \"isDeleted\": false,\n    \"name\": \"It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. \",\n    \"priority\": 6,\n    \"zonePoints\": [\n        {\n            \"dataOrderId\": 0,\n            \"dataX\": -74.227657858855721,\n            \"dataY\": 4.5672956339334974,\n            \"dataZoneId\": 12,\n            \"id\": 143\n        },\n        {\n            \"dataOrderId\": 0,\n            \"dataX\": -74.226128403586159,\n            \"dataY\": 4.58224637915437,\n            \"dataZoneId\": 12,\n            \"id\": 144\n        },\n        {\n            \"dataOrderId\": 0,\n            \"dataX\": -74.2114752353108,\n            \"dataY\": 4.5829348927791358,\n            \"dataZoneId\": 12,\n            \"id\": 145\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/zone/{{IdZone2}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"zone",
								"{{IdZone2}}"
							]
						},
						"description": "http://localhost/PublicApi/api/zone/{id}"
					},
					"response": []
				},
				{
					"name": "Zone by ID_Successful",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Read Of Zone\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdZone1\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{API_WS_URL}}/zone/{{IdZone1}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"zone",
								"{{IdZone1}}"
							]
						},
						"description": "http://localhost/PublicApi/api/zone/{id}"
					},
					"response": []
				},
				{
					"name": "Zone by ID_Failed not exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"No Information Found\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{API_WS_URL}}/zone/1000",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"zone",
								"1000"
							]
						},
						"description": "http://localhost/PublicApi/api/zone/{id}"
					},
					"response": []
				},
				{
					"name": "Zones List_Successful",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful List Of Zone\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"NameZone2\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"word\": \"{{NameZone2}}\",\r\n  \"page\": 0,\r\n  \"rows\": 0\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/zone/list",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"zone",
								"list"
							]
						},
						"description": "http://localhost/PublicApi/api/zone/list"
					},
					"response": []
				},
				{
					"name": "Zones List_Failed not exists",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"No Information Found\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"word\": \"OK\",\r\n  \"page\": 0,\r\n  \"rows\": 0\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/zone/list",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"zone",
								"list"
							]
						},
						"description": "http://localhost/PublicApi/api/zone/list"
					},
					"response": []
				},
				{
					"name": "Zone Delete_Successful",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Delete Of Zone\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdZone2\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_WS_URL}}/zone/{{IdZone2}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"zone",
								"{{IdZone2}}"
							]
						},
						"description": "http://localhost/PublicApi/api/zone/{id}"
					},
					"response": []
				},
				{
					"name": "Zone Delete_Failet used",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Record In Use, Cannot Be Deleted.\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_WS_URL}}/zone/1",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"zone",
								"1"
							]
						},
						"description": "http://localhost/PublicApi/api/zone/{id}"
					},
					"response": []
				},
				{
					"name": "Zone Delete_Failet not exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"The Zone, No Found.\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_WS_URL}}/zone/1000",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"zone",
								"1000"
							]
						},
						"description": "http://localhost/PublicApi/api/zone/{id}"
					},
					"response": []
				}
			],
			"description": "Apis de Zonas"
		},
		{
			"name": "7. Providers",
			"item": [
				{
					"name": "Provider Create_Successful",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/*Se guarda en la variable \"RandNameProvider1\" una palabra aleatoria para usarla como nombre y descripción*/\r",
									"var RandNameProvider1 = pm.variables.replaceIn('{{$randomLoremWords}}');\r",
									"pm.variables.set('RandNameProvider1', RandNameProvider1);\r",
									"console.log ('Imprime Variable Random ' + RandNameProvider1);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful creation of provider\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdZone1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"UpdateNameZone1\");\r",
									"\r",
									"/*Se guarda el json de la respuesta*/\r",
									"var data = pm.response.json();\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"IdProvider1\", data.id);\r",
									"console.log (data.id);\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"NameProvider1\", data.name);\r",
									"console.log (data.name);\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"assignType\": 0,\r\n  \"description\": \"{{RandNameProvider1}}\",\r\n  \"id\": 0,\r\n  \"isActive\": true,\r\n  \"isDelete\": false,\r\n  \"name\": \"{{RandNameProvider1}}\",\r\n  \"priority\": 1,\r\n  \"serviceDefault\": true,\r\n  \"type\": 0,\r\n  \"monitors\": null,\r\n  \"zones\": [\r\n    {\r\n      \"description\": \"\",\r\n      \"id\": {{IdZone1}},\r\n      \"isActive\": true,\r\n      \"name\": \"{{UpdateNameZone1}}\"\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/provider",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"provider"
							]
						},
						"description": "http://localhost/PublicApi/api/provider"
					},
					"response": []
				},
				{
					"name": "Provider Create_Successful inactive",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/*Se guarda en la variable \"RandNameProvider2\" una palabra aleatoria para usarla como nombre y descripción*/\r",
									"var RandNameProvider2 = pm.variables.replaceIn('{{$randomLoremWords}}');\r",
									"pm.variables.set('RandNameProvider2', RandNameProvider2);\r",
									"console.log ('Imprime Variable Random ' + RandNameProvider2);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Creation Of Provider Inactive\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se guarda el json de la respuesta*/\r",
									"var data = pm.response.json();\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"IdProvider2\", data.id);\r",
									"console.log (data.id);\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"NameProvider2\", data.name);\r",
									"console.log (data.name);\r",
									"\r",
									"/*Se valida el estado que devuelve el Json*/\r",
									"pm.test(\"Validate State Provider\", () => {\r",
									"    pm.expect(data.isActive).to.eql(false);\r",
									"})\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"assignType\": 1,\r\n  \"description\": \"{{RandNameProvider2}}\",\r\n  \"id\": 0,\r\n  \"isActive\": false,\r\n  \"isDelete\": false,\r\n  \"name\": \"{{RandNameProvider2}}\",\r\n  \"priority\": 3,\r\n  \"serviceDefault\": true,\r\n  \"type\": 1\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/provider",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"provider"
							]
						},
						"description": "http://localhost/PublicApi/api/provider"
					},
					"response": []
				},
				{
					"name": "Provider Create_Failed required fields",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Creation Failed Provider Required Fields\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"assignType\": true,\r\n  \"description\": \"\",\r\n  \"id\": 0,\r\n  \"isActive\": true,\r\n  \"isDelete\": true,\r\n  \"name\": \"\",\r\n  \"priority\": 1,\r\n  \"serviceDefault\": true,\r\n  \"type\": true\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/provider",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"provider"
							]
						},
						"description": "http://localhost/PublicApi/api/provider"
					},
					"response": []
				},
				{
					"name": "Provider Create_Failed exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Creation Failed - Other Provider Exist With The Same Name.\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"NameProvider1\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"assignType\": 0,\r\n  \"description\": \"{{NameProvider1}}\",\r\n  \"id\": 0,\r\n  \"isActive\": true,\r\n  \"isDelete\": true,\r\n  \"name\": \"{{NameProvider1}}\",\r\n  \"priority\": 3,\r\n  \"serviceDefault\": true,\r\n  \"type\": 0,\r\n  \"monitors\": null,\r\n  \"services\": null,\r\n  \"specialists\": null,\r\n  \"zones\": null\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/provider",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"provider"
							]
						},
						"description": "http://localhost/PublicApi/api/provider"
					},
					"response": []
				},
				{
					"name": "Provider Create_Failed field length",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Creation Failed Of Zone Maxlength\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"assignType\": 0,\r\n  \"description\": \"Nuevo proveedor de pruebas Nuevo proveedor de pruebas Nuevo proveedor de pruebas Nuevo proveedor de pruebas Nuevo proveedor de pruebas Nuevo proveedor de pruebas Nuevo proveedor de pruebas Nuevo proveedor de pruebas Nuevo proveedor de pruebas Nuevo proveedor de pruebas Nuevo proveedor de pruebas \",\r\n  \"id\": 0,\r\n  \"isActive\": true,\r\n  \"isDelete\": true,\r\n  \"name\": \"Especialistas Internos Especialistas Internos Especialistas Internos Especialistas Internos Especialistas Internos Especialistas Internos Especialistas Internos Especialistas Internos Especialistas Internos Especialistas Internos \",\r\n  \"priority\": 3,\r\n  \"serviceDefault\": true,\r\n  \"type\": 0,\r\n  \"monitors\": [\r\n    {\r\n      \"id\": 116,\r\n      \"isActive\": true,\r\n      \"name\": \"\",\r\n      \"type\": \"\",\r\n      \"userName\": \"\"\r\n    }\r\n  ],\r\n  \"services\": [\r\n    {\r\n      \"description\": \"\",\r\n      \"id\": 36,\r\n      \"isActive\": true,\r\n      \"name\": \"\",\r\n      \"slaId\": 3\r\n    }\r\n  ],\r\n  \"specialists\": [\r\n    {\r\n      \"id\": 119,\r\n      \"isActive\": true,\r\n      \"name\": \"\",\r\n      \"type\": \"\",\r\n      \"userName\": \"\"\r\n    }\r\n  ],\r\n  \"zones\": [\r\n    {\r\n      \"description\": \"\",\r\n      \"id\": 8,\r\n      \"isActive\": true,\r\n      \"name\": \"\"\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/provider",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"provider"
							]
						},
						"description": "http://localhost/PublicApi/api/provider"
					},
					"response": []
				},
				{
					"name": "Provider Update_Successful",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/*Se guarda en la variable \"UpdateRandNameProvider1\" una palabra aleatoria para usarla como nombre y descripción*/\r",
									"var UpdateRandNameProvider1 = pm.variables.replaceIn('{{$randomLoremWords}}');\r",
									"pm.variables.set('UpdateRandNameProvider1', UpdateRandNameProvider1);\r",
									"console.log ('Imprime Variable Random ' + UpdateRandNameProvider1);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Update Of Provider\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdProvider1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdZone1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"UpdateNameZone1\");\r",
									"\r",
									"/*Se guarda el json de la respuesta*/\r",
									"var data = pm.response.json();\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"UpdateRandNameProvider1\", data.name);\r",
									"console.log (data.name);\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"assignType\": 0,\n    \"description\": \"{{UpdateRandNameProvider1}}\",\n    \"id\": {{IdProvider1}},\n    \"isActive\": true,\n    \"isDelete\": false,\n    \"name\": \"{{UpdateRandNameProvider1}}\",\n    \"priority\": 2,\n    \"serviceDefault\": true,\n    \"type\": 1,\n    \"monitors\": null,\n    \"monitorsGroups\": null,\n    \"services\": null,\n    \"specialists\": null,\n    \"zones\": [\n        {\n            \"description\": \"desc\",\n            \"id\": {{IdZone1}},\n            \"isActive\": true,\n            \"name\": \"{{UpdateNameZone1}}\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/provider/{{IdProvider1}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"provider",
								"{{IdProvider1}}"
							]
						},
						"description": "http://localhost/PublicApi/api/provider/{id}"
					},
					"response": []
				},
				{
					"name": "Provider Update_Successful active",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Update Of Provider Active\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdProvider2\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"NameProvider2\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdZone1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"UpdateNameZone1\");\r",
									"\r",
									"/*Se guarda el json de la respuesta*/\r",
									"var data = pm.response.json();\r",
									"\r",
									"/*Se valida el estado que devuelve el Json*/\r",
									"pm.test(\"Validate State Provider\", () => {\r",
									"    pm.expect(data.isActive).to.eql(true);\r",
									"})\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"assignType\": false,\n    \"description\": \"{{NameProvider2}}\",\n    \"id\": {{IdProvider2}},\n    \"isActive\": true,\n    \"isDelete\": false,\n    \"name\": \"{{NameProvider2}}\",\n    \"priority\": 1,\n    \"serviceDefault\": true,\n    \"type\": false,\n    \"monitors\": null,\n    \"monitorsGroups\": null,\n    \"services\": null,\n    \"specialists\": null,\n    \"zones\": [\n        {\n            \"description\": \"{{UpdateNameZone1}}\",\n            \"id\": {{IdZone1}},\n            \"isActive\": false,\n            \"name\": \"{{UpdateNameZone1}}\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/provider/{{IdProvider2}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"provider",
								"{{IdProvider2}}"
							]
						},
						"description": "http://localhost/PublicApi/api/provider/{id}"
					},
					"response": []
				},
				{
					"name": "Provider Update_Failed required fields",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Update Failed Provider Required Fields\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdProvider2\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"assignType\": false,\n    \"description\": \"\",\n    \"id\": {{IdProvider2}},\n    \"isActive\": true,\n    \"isDelete\": false,\n    \"name\": \"\",\n    \"priority\": 1,\n    \"serviceDefault\": true,\n    \"type\": true,\n    \"monitors\": null,\n    \"monitorsGroups\": null,\n    \"services\": null,\n    \"specialists\": null,\n    \"zones\": null\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/provider/{{IdProvider2}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"provider",
								"{{IdProvider2}}"
							]
						},
						"description": "http://localhost/PublicApi/api/provider/{id}"
					},
					"response": []
				},
				{
					"name": "Provider Update_Failed exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Update Failed - Other Provider Exist With The Same Name.\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdProvider2\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"UpdateRandNameProvider1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdZone1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"UpdateNameZone1\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"assignType\": false,\n    \"description\": \"{{UpdateRandNameProvider1}}\",\n    \"id\": {{IdProvider2}},\n    \"isActive\": true,\n    \"isDelete\": false,\n    \"name\": \"{{UpdateRandNameProvider1}}\",\n    \"priority\": 2,\n    \"serviceDefault\": true,\n    \"type\": true,\n    \"monitors\": null,\n    \"monitorsGroups\": null,\n    \"services\": null,\n    \"specialists\": null,\n    \"zones\": [\n        {\n            \"description\": \"{{UpdateNameZone1}}\",\n            \"id\": {{IdZone1}},\n            \"isActive\": true,\n            \"name\": \"{{UpdateNameZone1}}\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/provider/{{IdProvider2}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"provider",
								"{{IdProvider2}}"
							]
						},
						"description": "http://localhost/PublicApi/api/provider/{id}"
					},
					"response": []
				},
				{
					"name": "Provider Update_Failed field lenght",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Update Failed Of Provider Maxlength\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdProvider2\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdZone1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"UpdateNameZone1\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"assignType\": false,\n    \"description\": \"Proveedor externo B MedioProveedor externo B medioProveedor externo B medioProveedor externo B medioProveedor externo B medioProveedor externo B medioProveedor externo B medioProveedor externo B medioProveedor externo B medioProveedor externo B medioProveedor externo B medioProveedor externo B medioProveedor externo B medioProveedor externo B medioProveedor externo B medioProveedor externo B medioProveedor externo B medioProveedor externo B medio\",\n    \"id\": {{IdProvider2}},\n    \"isActive\": true,\n    \"isDelete\": false,\n    \"name\": \"Proveedor externo B medio Proveedor externo B medioProveedor externo B medioProveedor externo B medioProveedor externo B medioProveedor externo B medioProveedor externo B medioProveedor externo B medioProveedor externo B medioProveedor externo B medioProveedor externo B medio\",\n    \"priority\": 2,\n    \"serviceDefault\": true,\n    \"type\": true,\n    \"monitors\": null,\n    \"monitorsGroups\": null,\n    \"services\": null,\n    \"specialists\": null,\n    \"zones\": [\n        {\n            \"description\": \"{{UpdateNameZone1}}\",\n            \"id\": {{IdZone1}},\n            \"isActive\": true,\n            \"name\": \"{{UpdateNameZone1}}\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/provider/{{IdProvider2}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"provider",
								"{{IdProvider2}}"
							]
						},
						"description": "http://localhost/PublicApi/api/provider/{id}"
					},
					"response": []
				},
				{
					"name": "Provider by ID_Successful",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Read Of Provider\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdProvider1\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{API_WS_URL}}/provider/{{IdProvider1}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"provider",
								"{{IdProvider1}}"
							]
						},
						"description": "http://localhost/PublicApi/api/provider/{id}"
					},
					"response": []
				},
				{
					"name": "Provider by ID_Failed not exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"No Information Found\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{API_WS_URL}}/provider/1000",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"provider",
								"1000"
							]
						},
						"description": "http://localhost/PublicApi/api/provider/{id}"
					},
					"response": []
				},
				{
					"name": "Providers List_Successfull",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful List Of Provider\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdProvider2\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"word\": \"{{IdProvider2}}\",\r\n  \"page\": 0,\r\n  \"rows\": 0\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/provider/list",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"provider",
								"list"
							]
						},
						"description": "http://localhost/PublicApi/api/provider/list"
					},
					"response": []
				},
				{
					"name": "Providers List_Failed not exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"No Information Found\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"word\": \"pruebas\",\r\n  \"page\": 0,\r\n  \"rows\": 0\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/provider/list",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"provider",
								"list"
							]
						},
						"description": "http://localhost/PublicApi/api/provider/list"
					},
					"response": []
				},
				{
					"name": "Provider Delete_Sucessfull",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Delete Of Provider\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdProvider2\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_WS_URL}}/provider/{{IdProvider2}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"provider",
								"{{IdProvider2}}"
							]
						},
						"description": "http://localhost/PublicApi/api/provider/{id}"
					},
					"response": []
				},
				{
					"name": "Provider Delete_Failed used",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Record In Use, Cannot Be Deleted.\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_WS_URL}}/provider/2",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"provider",
								"2"
							]
						},
						"description": "http://localhost/PublicApi/api/provider/{id}"
					},
					"response": []
				},
				{
					"name": "Provider Delete_Failed not exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"The Provider, No Found.\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_WS_URL}}/provider/1000",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"provider",
								"1000"
							]
						},
						"description": "http://localhost/PublicApi/api/provider/{id}"
					},
					"response": []
				}
			],
			"description": "Apis de Proveedores"
		},
		{
			"name": "8. Clients",
			"item": [
				{
					"name": "Client Create_Successful",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/*Se guarda en la variable \"RandNameClient1\" una palabra aleatoria para usarla como nombre y descripción*/\r",
									"var RandNameClient1 = pm.variables.replaceIn('{{$randomFirstName}}');\r",
									"pm.variables.set('RandNameClient1', RandNameClient1);\r",
									"console.log ('Imprime Variable Random ' + RandNameClient1);\r",
									"\r",
									"/*Se guarda en la variable \"RandUniqueRefClient1\" un numero aleatorio para usarlo como unica referencia*/\r",
									"var RandUniqueRefClient1 = pm.variables.replaceIn('{{$randomBankAccount}}');\r",
									"pm.variables.set('RandUniqueRefClient1', RandUniqueRefClient1);\r",
									"console.log ('Imprime Variable Random ' + RandUniqueRefClient1);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Creation Of Client\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdCompany1\");\r",
									"\r",
									"/*Se guarda el json de la respuesta*/\r",
									"var data = pm.response.json();\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"IdClient1\", data.id);\r",
									"console.log (data.id);\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"NameClient1\", data.name);\r",
									"console.log (data.name);\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"UniqueReferenceClient1\", data.uniqueReference);\r",
									"console.log (data.uniqueReference);\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"additionalAddressInfo\": \"Casa Esquinera Gris, Piso 2\",\r\n  \"address\": \"Av. Boyacá #80-94, Bogotá, Colombia\",\r\n  \"channels\": [\r\n    {\r\n      \"channelName\": \"\",\r\n      \"id\": 0,\r\n      \"isActiveChannel\": false\r\n    }\r\n  ],\r\n  \"companyId\": {{IdCompany1}},\r\n  \"email\": \"julieth.mancera@arandasoft.com\",\r\n  \"hasSignature\": false,\r\n  \"id\": 0,\r\n  \"importedFrom\": null,\r\n  \"isActive\": true,\r\n  \"isImported\": false,\r\n  \"latitude\": 4.694904181527008,\r\n  \"longitude\": -74.08718699718636,\r\n  \"name\": \"{{RandNameClient1}}\",\r\n  \"phone\": null,\r\n  \"uniqueReference\": \"{{RandUniqueRefClient1}}\"\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/clients",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"clients"
							]
						},
						"description": "http://localhost/PublicApi/api/clients"
					},
					"response": []
				},
				{
					"name": "Client Create_Successful inactive",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/*Se guarda en la variable \"RandNameClient2\" una palabra aleatoria para usarla como nombre y descripción*/\r",
									"var RandNameClient2 = pm.variables.replaceIn('{{$randomFirstName}}');\r",
									"pm.variables.set('RandNameClient2', RandNameClient2);\r",
									"console.log ('Imprime Variable Random ' + RandNameClient2);\r",
									"\r",
									"/*Se guarda en la variable \"RandUniqueRefClient2\" un numero aleatorio para usarlo como unica referencia*/\r",
									"var RandUniqueRefClient2 = pm.variables.replaceIn('{{$randomBankAccount}}');\r",
									"pm.variables.set('RandUniqueRefClient2', RandUniqueRefClient2);\r",
									"console.log ('Imprime Variable Random ' + RandUniqueRefClient2);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Creation Of Client\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdCompany1\");\r",
									"\r",
									"/*Se guarda el json de la respuesta*/\r",
									"var data = pm.response.json();\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"IdClient2\", data.id);\r",
									"console.log (data.id);\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"NameClient2\", data.name);\r",
									"console.log (data.name);\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"UniqueReferenceClient2\", data.uniqueReference);\r",
									"console.log (data.uniqueReference);\r",
									"\r",
									"/*Se valida el estado que devuelve el Json*/\r",
									"pm.test(\"Validate State Company\", () => {\r",
									"    pm.expect(data.isActive).to.eql(false);\r",
									"})\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"additionalAddressInfo\": \"Torre 5 Apto 601\",\r\n  \"address\": \"P&P Topografos, 27A-57, Calle 45, Ciudad Universitaria, Teusaquillo, Bogotá, Distrito Capital, 11311, Colombia\",\r\n  \"channels\": [\r\n    {\r\n      \"channelName\": \"\",\r\n      \"id\": 0,\r\n      \"isActiveChannel\": false\r\n    }\r\n  ],\r\n  \"companyId\": {{IdCompany1}},\r\n  \"email\": \"julieth.mancera@arandasoft.com\",\r\n  \"hasSignature\": true,\r\n  \"id\": 0,\r\n  \"importedFrom\": null,\r\n  \"isActive\": false,\r\n  \"isImported\": true,\r\n  \"latitude\": 4.60971,\r\n  \"longitude\": -74.08175,\r\n  \"name\": \"{{RandNameClient2}}\",\r\n  \"phone\": 23456789,\r\n  \"uniqueReference\": \"{{RandUniqueRefClient2}}\"\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/clients",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"clients"
							]
						},
						"description": "http://localhost/PublicApi/api/clients"
					},
					"response": []
				},
				{
					"name": "Client Create_Successful with services",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/*Se guarda en la variable \"RandNameClient3\" una palabra aleatoria para usarla como nombre y descripción*/\r",
									"var RandNameClient3 = pm.variables.replaceIn('{{$randomFirstName}}');\r",
									"pm.variables.set('RandNameClient3', RandNameClient3);\r",
									"console.log ('Imprime Variable Random ' + RandNameClient3);\r",
									"\r",
									"/*Se guarda en la variable \"RandUniqueRefClient3\" un numero aleatorio para usarlo como unica referencia*/\r",
									"var RandUniqueRefClient3 = pm.variables.replaceIn('{{$randomBankAccount}}');\r",
									"pm.variables.set('RandUniqueRefClient3', RandUniqueRefClient3);\r",
									"console.log ('Imprime Variable Random ' + RandUniqueRefClient3);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Creation Of Client With Services\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdCompany1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdService1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"UpdateNameService1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdSla1\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"additionalAddressInfo\": \"Casa Esquinera\",\r\n  \"address\": \"Casa de Justicia Los Martires, Carrera 21 Cra 21 14-75, Los Mártires, 111411 Los Mártires, Distrito Capital, Colombia\",\r\n  \"additionalFields\": null,\r\n  \"channels\": [\r\n    {\r\n      \"channelName\": \"\",\r\n      \"id\": 0,\r\n      \"isActiveChannel\": false\r\n    }\r\n  ],\r\n  \"companyId\": {{IdCompany1}},\r\n  \"email\": \"julieth.mancera@arandasoft.com\",\r\n  \"hasSignature\": true,\r\n  \"id\": 0,\r\n  \"importedFrom\": null,\r\n  \"isActive\": true,\r\n  \"isImported\": false,\r\n  \"latitude\": 4.610522753516477,\r\n  \"longitude\": -74.08521541406004,\r\n  \"name\": \"{{RandNameClient3}}\",\r\n  \"phone\": 8143957,\r\n  \"uniqueReference\": \"{{RandUniqueRefClient3}}\",\r\n  \"services\": [\r\n    {\r\n      \"description\": \"{{UpdateNameService1}}\",\r\n      \"id\": {{IdService1}},\r\n      \"isActive\": true,\r\n      \"name\": \"{{UpdateNameService1}}\",\r\n      \"slaId\": {{IdSla1}}\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/clients",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"clients"
							]
						},
						"description": "http://localhost/PublicApi/api/clients"
					},
					"response": []
				},
				{
					"name": "Client Create_Failed required fields",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Creation Failed Client Required Fields\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"additionalAddressInfo\": \"Pruebas\",\r\n  \"address\": \"P&P Topografos, 27A-57, Calle 45, Ciudad Universitaria, Teusaquillo, Bogotá, Distrito Capital, 11311, Colombia\",\r\n  \"channels\": [\r\n    {\r\n      \"channelName\": \"\",\r\n      \"id\": 0,\r\n      \"isActiveChannel\": false\r\n    }\r\n  ],\r\n  \"companyId\": null,\r\n  \"email\": \"julieth.mancera@arandasoft.com\",\r\n  \"hasSignature\": true,\r\n  \"id\": 0,\r\n  \"importedFrom\": null,\r\n  \"isActive\": true,\r\n  \"isImported\": true,\r\n  \"latitude\": null,\r\n  \"longitude\": null,\r\n  \"name\": \"\",\r\n  \"password\": null,\r\n  \"phone\": null,\r\n  \"uniqueReference\": \"\"\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/clients",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"clients"
							]
						},
						"description": "http://localhost/PublicApi/api/clients"
					},
					"response": []
				},
				{
					"name": "Client Create_Failed telephone/email",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/*Se guarda en la variable \"RandNameClient4\" una palabra aleatoria para usarla como nombre y descripción*/\r",
									"var RandNameClient4 = pm.variables.replaceIn('{{$randomFirstName}}');\r",
									"pm.variables.set('RandNameClient4', RandNameClient4);\r",
									"console.log ('Imprime Variable Random ' + RandNameClient4);\r",
									"\r",
									"/*Se guarda en la variable \"RandUniqueRefClient4\" un numero aleatorio para usarlo como unica referencia*/\r",
									"var RandUniqueRefClient4 = pm.variables.replaceIn('{{$randomBankAccount}}');\r",
									"pm.variables.set('RandUniqueRefClient4', RandUniqueRefClient4);\r",
									"console.log ('Imprime Variable Random ' + RandUniqueRefClient4);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Creation Failed Client Telephone/Email\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdCompany1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdService1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"UpdateNameService1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdSla1\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"additionalAddressInfo\": \"Pruebas\",\r\n  \"address\": \"P&P Topografos, 27A-57, Calle 45, Ciudad Universitaria, Teusaquillo, Bogotá, Distrito Capital, 11311, Colombia\",\r\n  \"channels\": [\r\n    {\r\n      \"channelName\": \"\",\r\n      \"id\": 0,\r\n      \"isActiveChannel\": false\r\n    }\r\n  ],\r\n  \"companyId\": {{IdCompany1}},\r\n  \"email\": \"pruebas_apihotmail.com\",\r\n  \"hasSignature\": true,\r\n  \"id\": 0,\r\n  \"importedFrom\": null,\r\n  \"isActive\": true,\r\n  \"isImported\": true,\r\n  \"latitude\": 1,\r\n  \"longitude\": 1,\r\n  \"name\": \"{{RandNameClient4}}\",\r\n  \"phone\": 3016,\r\n  \"uniqueReference\": \"{{RandUniqueRefClient4}}\",\r\n  \"services\": [\r\n    {\r\n      \"description\": \"{{UpdateNameService1}}\",\r\n      \"id\": {{IdService1}},\r\n      \"isActive\": true,\r\n      \"name\": \"{{UpdateNameService1}}\",\r\n      \"slaId\": {{IdSla1}}\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/clients",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"clients"
							]
						},
						"description": "http://localhost/PublicApi/api/clients"
					},
					"response": []
				},
				{
					"name": "Client Create_Failed address",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/*Se guarda en la variable \"RandNameClient5\" una palabra aleatoria para usarla como nombre y descripción*/\r",
									"var RandNameClient5 = pm.variables.replaceIn('{{$randomFirstName}}');\r",
									"pm.variables.set('RandNameClient5', RandNameClient5);\r",
									"console.log ('Imprime Variable Random ' + RandNameClient5);\r",
									"\r",
									"/*Se guarda en la variable \"RandUniqueRefClient5\" un numero aleatorio para usarlo como unica referencia*/\r",
									"var RandUniqueRefClient5 = pm.variables.replaceIn('{{$randomBankAccount}}');\r",
									"pm.variables.set('RandUniqueRefClient5', RandUniqueRefClient5);\r",
									"console.log ('Imprime Variable Random ' + RandUniqueRefClient5);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Creation Failed Client Address\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdCompany1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdService1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"UpdateNameService1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdSla1\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"additionalAddressInfo\": \"prueba\",\r\n  \"address\": \"\",\r\n  \"channels\": [\r\n    {\r\n      \"channelName\": \"\",\r\n      \"id\": 0,\r\n      \"isActiveChannel\": false\r\n    }\r\n  ],\r\n  \"companyId\": {{IdCompany1}},\r\n  \"email\": \"pruebas_api@hotmail.com\",\r\n  \"hasSignature\": true,\r\n  \"id\": 0,\r\n  \"importedFrom\": null,\r\n  \"isActive\": true,\r\n  \"isImported\": true,\r\n  \"latitude\": 1,\r\n  \"longitude\": 1,\r\n  \"name\": \"{{RandNameClient5}}\",\r\n  \"phone\": 3016153272,\r\n  \"uniqueReference\": \"{{RandUniqueRefClient5}}\",\r\n  \"services\": [\r\n    {\r\n      \"description\": \"{{UpdateNameService1}}\",\r\n      \"id\": {{IdService1}},\r\n      \"isActive\": true,\r\n      \"name\": \"{{UpdateNameService1}}\",\r\n      \"slaId\": {{IdSla1}}\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/clients",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"clients"
							]
						},
						"description": "http://localhost/PublicApi/api/clients"
					},
					"response": []
				},
				{
					"name": "Client Create_Failed exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Creation Failed - Other Client Exist With The Same Name.\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdCompany1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"NameClient1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"UniqueReferenceClient1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdService1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"UpdateNameService1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdSla1\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"additionalAddressInfo\": \"Casa\",\r\n  \"address\": \"P&P Topografos, 27A-57, Calle 45, Ciudad Universitaria, Teusaquillo, Bogotá, Distrito Capital, 11311, Colombia\",\r\n  \"channels\": [\r\n    {\r\n      \"channelName\": \"\",\r\n      \"id\": 0,\r\n      \"isActiveChannel\": false\r\n    }\r\n  ],\r\n  \"companyId\": {{IdCompany1}},\r\n  \"email\": \"pruebas@hotmail.com\",\r\n  \"hasSignature\": true,\r\n  \"id\": 0,\r\n  \"importedFrom\": null,\r\n  \"isActive\": true,\r\n  \"isImported\": true,\r\n  \"latitude\": 1,\r\n  \"longitude\": 1,\r\n  \"name\": \"{{NameClient1}}\",\r\n  \"phone\": 3016153272,\r\n  \"uniqueReference\": \"{{UniqueReferenceClient1}}\",\r\n  \"services\": [\r\n    {\r\n      \"description\": \"{{UpdateNameService1}}\",\r\n      \"id\": {{IdService1}},\r\n      \"isActive\": true,\r\n      \"name\": \"{{UpdateNameService1}}\",\r\n      \"slaId\": {{IdSla1}}\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/clients",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"clients"
							]
						},
						"description": "http://localhost/PublicApi/api/clients"
					},
					"response": []
				},
				{
					"name": "Client Create_Failed field length",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Creation Failed Of Client Maxlength\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"additionalAddressInfo\": \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. e\",\r\n  \"address\": \"P&P Topografos, 27A-57, Calle 45, Ciudad Universitaria, Teusaquillo, Bogotá, Distrito Capital, 11311, Colombia\",\r\n  \"channels\": [\r\n    {\r\n      \"channelName\": \"\",\r\n      \"id\": 0,\r\n      \"isActiveChannel\": false\r\n    }\r\n  ],\r\n  \"companyId\": 0,\r\n  \"email\": \"pruebas_api@hotmail.com\",\r\n  \"hasSignature\": true,\r\n  \"id\": 0,\r\n  \"importedFrom\": null,\r\n  \"isActive\": true,\r\n  \"isImported\": true,\r\n  \"latitude\": 1,\r\n  \"longitude\": 1,\r\n  \"name\": \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the\",\r\n  \"phone\": 3016153272,\r\n  \"uniqueReference\": \"01234567890123456789012345678901234567890123456789\",\r\n  \"services\": [\r\n    {\r\n      \"description\": \"\",\r\n      \"id\": 36,\r\n      \"isActive\": true,\r\n      \"name\": \"\",\r\n      \"slaId\": 0\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/clients",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"clients"
							]
						},
						"description": "http://localhost/PublicApi/api/clients"
					},
					"response": []
				},
				{
					"name": "Client Update_Successful",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/*Se guarda en la variable \"UpdateRandNameClient1\" una palabra aleatoria para usarla como nombre y descripción*/\r",
									"var UpdateRandNameClient1 = pm.variables.replaceIn('{{$randomFirstName}}');\r",
									"pm.variables.set('UpdateRandNameClient1', UpdateRandNameClient1);\r",
									"console.log ('Imprime Variable Random ' + UpdateRandNameClient1);\r",
									"\r",
									"/*Se guarda en la variable \"UpdateRandUniqueRefClient1\" un numero aleatorio para usarlo como unica referencia*/\r",
									"var UpdateRandUniqueRefClient1 = pm.variables.replaceIn('{{$randomBankAccount}}');\r",
									"pm.variables.set('UpdateRandUniqueRefClient1', UpdateRandUniqueRefClient1);\r",
									"console.log ('Imprime Variable Random ' + UpdateRandUniqueRefClient1);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Update Of Client\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdCompany1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdClient1\");\r",
									"\r",
									"/*Se guarda el json de la respuesta*/\r",
									"var data = pm.response.json();\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"UpdateNameClient1\", data.name);\r",
									"console.log (data.name);\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"UpdateUniqueReferenceClient1\", data.uniqueReference);\r",
									"console.log (data.uniqueReference);\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"additionalAddressInfo\": \"Casa 2\",\n    \"additionalFields\": null,\n    \"address\": \"Titan Plaza Bogota\",\n    \"channels\": [\n        {\n            \"channelName\": \"\",\n            \"id\": 0,\n            \"isActiveChannel\": false\n        }\n    ],\n    \"companyId\": {{IdCompany1}},\n    \"email\": \"julieth.mancerag@arandasoft.com\",\n    \"hasSignature\": false,\n    \"id\": {{IdClient1}},\n    \"importedFrom\": null,\n    \"isActive\": true,\n    \"isImported\": false,\n    \"latitude\": 4.6949033,\n    \"longitude\": -74.0864907,\n    \"name\": \"{{UpdateRandNameClient1}}\",\n    \"password\": null,\n    \"phone\": 3016153272,\n    \"services\": null,\n    \"uniqueReference\": \"{{UpdateRandUniqueRefClient1}}\"\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/clients/{{IdClient1}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"clients",
								"{{IdClient1}}"
							]
						},
						"description": "http://localhost/PublicApi/api/clients/{id}"
					},
					"response": []
				},
				{
					"name": "Client Update_Successful active",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Update Of Client Active\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdCompany1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdClient2\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"NameClient2\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"UniqueReferenceClient2\");\r",
									"\r",
									"/*Se guarda el json de la respuesta*/\r",
									"var data = pm.response.json();\r",
									"\r",
									"/*Se valida el estado que devuelve el Json*/\r",
									"pm.test(\"Validate State Client\", () => {\r",
									"    pm.expect(data.isActive).to.eql(true);\r",
									"})\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"additionalAddressInfo\": \"\",\n    \"additionalFields\": null,\n    \"address\": null,\n    \"channels\": [\n        {\n            \"channelName\": \"\",\n            \"id\": 0,\n            \"isActiveChannel\": false\n        }\n    ],\n    \"companyId\": {{IdCompany1}},\n    \"email\": null,\n    \"hasSignature\": false,\n    \"id\": {{IdClient2}},\n    \"importedFrom\": null,\n    \"isActive\": true,\n    \"isImported\": false,\n    \"latitude\": null,\n    \"longitude\": null,\n    \"name\": \"{{NameClient2}}\",\n    \"password\": null,\n    \"phone\": null,\n    \"services\": null,\n    \"uniqueReference\": \"{{UniqueReferenceClient2}}\"\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/clients/{{IdClient2}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"clients",
								"{{IdClient2}}"
							]
						},
						"description": "http://localhost/PublicApi/api/clients/{id}"
					},
					"response": []
				},
				{
					"name": "Client Update_Successful with services",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Update Of Client With Services\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdCompany1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdClient2\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"NameClient2\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"UniqueReferenceClient2\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdService1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"UpdateNameService1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdSla1\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"additionalAddressInfo\": \"\",\n    \"additionalFields\": null,\n    \"address\": null,\n    \"channels\": [\n        {\n            \"channelName\": \"\",\n            \"id\": 0,\n            \"isActiveChannel\": false\n        }\n    ],\n    \"companyId\": {{IdCompany1}},\n    \"email\": null,\n    \"hasSignature\": false,\n    \"id\": {{IdClient2}},\n    \"importedFrom\": null,\n    \"isActive\": true,\n    \"isImported\": false,\n    \"latitude\": null,\n    \"longitude\": null,\n    \"name\": \"{{NameClient2}}\",\n    \"password\": null,\n    \"phone\": null,\n    \"services\": [\n    {\n      \"description\": \"{{UpdateNameService1}}\",\n      \"id\": {{IdService1}},\n      \"isActive\": true,\n      \"name\": \"{{UpdateNameService1}}\",\n      \"slaId\": {{IdSla1}}\n    }\n  ],\n    \"uniqueReference\": \"{{UniqueReferenceClient2}}\"\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/clients/{{IdClient2}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"clients",
								"{{IdClient2}}"
							]
						},
						"description": "http://localhost/PublicApi/api/clients/{id}"
					},
					"response": []
				},
				{
					"name": "Client Update_Failed required fields",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Update Failed Client Required Fields\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdClient2\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"additionalAddressInfo\": \"\",\n    \"additionalFields\": null,\n    \"address\": null,\n    \"channels\": [\n        {\n            \"channelName\": \"\",\n            \"id\": 0,\n            \"isActiveChannel\": false\n        }\n    ],\n    \"companyId\": null,\n    \"email\": null,\n    \"hasSignature\": false,\n    \"id\": {{IdClient2}},\n    \"importedFrom\": null,\n    \"isActive\": true,\n    \"isImported\": false,\n    \"latitude\": null,\n    \"longitude\": null,\n    \"name\": \"\",\n    \"password\": null,\n    \"phone\": null,\n    \"uniqueReference\": \"\"\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/clients/{{IdClient2}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"clients",
								"{{IdClient2}}"
							]
						},
						"description": "http://localhost/PublicApi/api/clients/{id}"
					},
					"response": []
				},
				{
					"name": "Client Update_Failed telephone/email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Update Failed Client Telephone/Email\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdClient2\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"NameClient2\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"UniqueReferenceClient2\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"additionalAddressInfo\": \"Casa 20\",\n    \"additionalFields\": null,\n    \"address\": \"Cl. 96 #69B-30, Bogotá, Colombia\",\n    \"channels\": null,\n    \"companyId\": null,\n    \"email\": \"PRUEBAS@PRUEBASCOM\",\n    \"hasSignature\": false,\n    \"id\": {{IdClient2}},\n    \"importedFrom\": null,\n    \"isActive\": true,\n    \"isImported\": false,\n    \"latitude\": 4.69092919999999,\n    \"longitude\": -74.0776812,\n    \"name\": \"{{NameClient2}}\",\n    \"password\": null,\n    \"phone\": \"32255\",\n    \"services\": null,\n    \"uniqueReference\": \"{{UniqueReferenceClient2}}\"\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/clients/{{IdClient2}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"clients",
								"{{IdClient2}}"
							]
						},
						"description": "http://localhost/PublicApi/api/clients/{id}"
					},
					"response": []
				},
				{
					"name": "Client Update_Failed address",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Update Failed Client Address\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdClient2\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"NameClient2\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"UniqueReferenceClient2\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"additionalAddressInfo\": \"Casa 20\",\n    \"additionalFields\": null,\n    \"address\": \"Cl. 96 #69B-30, Bogotá, Colombia\",\n    \"channels\": null,\n    \"companyId\": null,\n    \"email\": \"PRUEBAS@PRUEBAS.COM\",\n    \"hasSignature\": false,\n    \"id\": {{IdClient2}},\n    \"importedFrom\": null,\n    \"isActive\": true,\n    \"isImported\": false,\n    \"latitude\": 0,\n    \"longitude\": -74.0776812,\n    \"name\": \"{{NameClient2}}\",\n    \"password\": null,\n    \"phone\": \"322555\",\n    \"services\": null,\n    \"uniqueReference\": \"{{UniqueReferenceClient2}}\"\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/clients/{{IdClient2}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"clients",
								"{{IdClient2}}"
							]
						},
						"description": "http://localhost/PublicApi/api/clients/{id}"
					},
					"response": []
				},
				{
					"name": "Client Update_Failed exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Update Failed - Other Client Exist With The Same Name.\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdClient2\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"UpdateNameClient1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"UpdateUniqueReferenceClient1\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"additionalAddressInfo\": \"\",\n    \"additionalFields\": null,\n    \"address\": null,\n    \"channels\": null,\n    \"companyId\": null,\n    \"email\": null,\n    \"hasSignature\": false,\n    \"id\": {{IdClient2}},\n    \"importedFrom\": null,\n    \"isActive\": true,\n    \"isImported\": false,\n    \"latitude\": null,\n    \"longitude\": null,\n    \"name\": \"{{UpdateNameClient1}}\",\n    \"password\": null,\n    \"phone\": null,\n    \"services\": null,\n    \"uniqueReference\": \"{{UpdateUniqueReferenceClient1}}\"\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/clients/{{IdClient2}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"clients",
								"{{IdClient2}}"
							]
						},
						"description": "http://localhost/PublicApi/api/clients/{id}"
					},
					"response": []
				},
				{
					"name": "Client Update_Failed field length",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Update Failed Of Client Maxlength\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdClient2\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"additionalAddressInfo\": \"It is a long established fact that a reader will be distracted by the readable content of a page\",\n    \"additionalFields\": null,\n    \"address\": \"Zona Verde París Gaitán, Dg. 83b, Bogotá, Colombia\",\n    \"channels\": [\n        {\n            \"channelName\": \"\",\n            \"id\": 0,\n            \"isActiveChannel\": false\n        }\n    ],\n    \"companyId\": null,\n    \"email\": \"julieth.mancera@arandasoft.com\",\n    \"hasSignature\": false,\n    \"id\": {{IdClient2}},\n    \"importedFrom\": null,\n    \"isActive\": true,\n    \"isImported\": false,\n    \"latitude\": 4.70523596261031,\n    \"longitude\": -74.09608167742918,\n    \"name\": \"It is a long established fact that a reader will be distracted by the readable content of a page\",\n    \"password\": null,\n    \"phone\": null,\n    \"services\": null,\n    \"uniqueReference\": \"51825816\"\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/clients/{{IdClient2}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"clients",
								"{{IdClient2}}"
							]
						},
						"description": "http://localhost/PublicApi/api/clients/{id}"
					},
					"response": []
				},
				{
					"name": "Client by ID_Successful",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Read Of Client\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdClient1\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{API_WS_URL}}/clients/{{IdClient1}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"clients",
								"{{IdClient1}}"
							]
						},
						"description": "http://localhost/PublicApi/api/clients/{id}"
					},
					"response": []
				},
				{
					"name": "Client by ID_Failed not exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"No Information Found\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{API_WS_URL}}/clients/1000",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"clients",
								"1000"
							]
						},
						"description": "http://localhost/PublicApi/api/clients/{id}"
					},
					"response": []
				},
				{
					"name": "Clients List_Successful",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful List Of Client\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"NameClient2\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"word\": \"{{NameClient2}}\",\r\n  \"page\": 0,\r\n  \"rows\": 0\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/clients/list",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"clients",
								"list"
							]
						},
						"description": "http://localhost/PublicApi/api/clients/list"
					},
					"response": []
				},
				{
					"name": "Clients List_Failed not exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"No Information Found\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"word\": \"Nevo\",\r\n  \"page\": 0,\r\n  \"rows\": 0\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/clients/list",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"clients",
								"list"
							]
						},
						"description": "http://localhost/PublicApi/api/clients/list"
					},
					"response": []
				},
				{
					"name": "Client Delete_Successful",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Delete Of Client\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdClient2\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{API_WS_URL}}/clients/{{IdClient2}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"clients",
								"{{IdClient2}}"
							]
						},
						"description": "http://localhost/PublicApi/api/clients/{id}"
					},
					"response": []
				},
				{
					"name": "Client Delete_Failed used",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Record In Use, Cannot Be Deleted.\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{API_WS_URL}}/clients/5",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"clients",
								"5"
							]
						},
						"description": "http://localhost/PublicApi/api/clients/{id}"
					},
					"response": []
				},
				{
					"name": "Client Delete_Failed not exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"The Client, No Found.\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{API_WS_URL}}/clients/1000",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"clients",
								"1000"
							]
						},
						"description": "http://localhost/PublicApi/api/clients/{id}"
					},
					"response": []
				}
			],
			"description": "Apis de Clientes"
		},
		{
			"name": "9. Web Users",
			"item": [
				{
					"name": "Web User Create_Successful",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/*Se guarda en la variable \"RandUserNameWebUser1\" una palabra aleatoria para usarla como nombre y descripción*/\r",
									"var RandUserNameWebUser1 = pm.variables.replaceIn('{{$randomFirstName}}');\r",
									"pm.variables.set('RandUserNameWebUser1', RandUserNameWebUser1);\r",
									"console.log ('Imprime Variable Random ' + RandUserNameWebUser1);\r",
									"\r",
									"/*Se guarda en la variable \"RandNameWebUser1\" una palabra aleatoria para usarla como nombre y descripción*/\r",
									"var RandNameWebUser1 = pm.variables.replaceIn('{{$randomFirstName}}');\r",
									"pm.variables.set('RandNameWebUser1', RandNameWebUser1);\r",
									"console.log ('Imprime Variable Random ' + RandNameWebUser1);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Creation Of Web User\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se guarda el json de la respuesta*/\r",
									"var data = pm.response.json();\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"IdWebUser1\", data.id);\r",
									"console.log (data.id);\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"NameWebUser1\", data.name);\r",
									"console.log (data.name);\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"UserNameWebUser1\", data.userName);\r",
									"console.log (data.userName);\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"monitor@pruebas.com\",\r\n    \"id\": 0,\r\n    \"isActive\": true,\r\n    \"isImported\": false,\r\n    \"ldapId\": 0,\r\n    \"name\": \"{{RandNameWebUser1}}\",\r\n    \"phone\": \"3016153272\",\r\n    \"userName\": \"{{RandUserNameWebUser1}}\",\r\n    \"groups\": null,\r\n    \"roles\": [\r\n        {\r\n            \"description\": \"WorkOrders Dispatcher\",\r\n            \"id\": 272,\r\n            \"isActive\": true,\r\n            \"name\": \"AFLS_Dispatcher\"\r\n        }\r\n    ]\r\n}\r\n\r\n\r\n"
						},
						"url": {
							"raw": "{{API_WS_URL}}/webuser",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"webuser"
							]
						},
						"description": "http://localhost/PublicApi/api/webuser"
					},
					"response": []
				},
				{
					"name": "Web User Create_Successful inactive",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/*Se guarda en la variable \"RandUserNameWebUser2\" una palabra aleatoria para usarla como nombre y descripción*/\r",
									"var RandUserNameWebUser2 = pm.variables.replaceIn('{{$randomFirstName}}');\r",
									"pm.variables.set('RandUserNameWebUser2', RandUserNameWebUser2);\r",
									"console.log ('Imprime Variable Random ' + RandUserNameWebUser2);\r",
									"\r",
									"/*Se guarda en la variable \"RandNameWebUser2\" una palabra aleatoria para usarla como nombre y descripción*/\r",
									"var RandNameWebUser2 = pm.variables.replaceIn('{{$randomFirstName}}');\r",
									"pm.variables.set('RandNameWebUser2', RandNameWebUser2);\r",
									"console.log ('Imprime Variable Random ' + RandNameWebUser2);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Creation Of Web User\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se guarda el json de la respuesta*/\r",
									"var data = pm.response.json();\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"IdWebUser2\", data.id);\r",
									"console.log (data.id);\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"NameWebUser2\", data.name);\r",
									"console.log (data.name);\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"UserNameWebUser2\", data.userName);\r",
									"console.log (data.userName);\r",
									"\r",
									"/*Se valida el estado que devuelve el Json*/\r",
									"pm.test(\"Validate State Web User\", () => {\r",
									"    pm.expect(data.isActive).to.eql(false);\r",
									"})\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"despachador@pruebas.com\",\r\n    \"id\": 0,\r\n    \"isActive\": false,\r\n    \"isImported\": false,\r\n    \"ldapId\": 0,\r\n    \"name\": \"{{RandNameWebUser2}}\",\r\n    \"phone\": \"3016153272\",\r\n    \"userName\": \"{{RandUserNameWebUser2}}\",\r\n    \"groups\": null,\r\n    \"roles\": [\r\n        {\r\n            \"description\": \"WorkOrders Dispatcher\",\r\n            \"id\": 272,\r\n            \"isActive\": true,\r\n            \"name\": \"AFLS_Dispatcher\"\r\n        }\r\n    ]\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/webuser",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"webuser"
							]
						},
						"description": "http://localhost/PublicApi/api/webuser"
					},
					"response": []
				},
				{
					"name": "Web User Create_Failed required fields",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Creation Failed Web User Required Fields\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"\",\r\n    \"id\": 0,\r\n    \"isActive\": true,\r\n    \"isImported\": false,\r\n    \"ldapId\": 0,\r\n    \"name\": \"\",\r\n    \"phone\": \"\",\r\n    \"userName\": \"\",\r\n    \"groups\": [\r\n    {\r\n      \"description\": \"\",\r\n      \"id\": 13,\r\n      \"isActive\": true,\r\n      \"name\": \"\",\r\n      \"type\": \"\"\r\n    }\r\n  ],\r\n    \"roles\": [\r\n        {\r\n            \"description\": \"\",\r\n            \"id\": 0,\r\n            \"isActive\": true,\r\n            \"name\": \"\"\r\n        }\r\n    ]\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/webuser",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"webuser"
							]
						},
						"description": "http://localhost/PublicApi/api/webuser"
					},
					"response": []
				},
				{
					"name": "Web User Create_Failed telephone/email",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/*Se guarda en la variable \"RandUserNameWebUser3\" una palabra aleatoria para usarla como nombre y descripción*/\r",
									"var RandUserNameWebUser3 = pm.variables.replaceIn('{{$randomFirstName}}');\r",
									"pm.variables.set('RandUserNameWebUser3', RandUserNameWebUser3);\r",
									"console.log ('Imprime Variable Random ' + RandUserNameWebUser3);\r",
									"\r",
									"/*Se guarda en la variable \"RandNameWebUser3\" una palabra aleatoria para usarla como nombre y descripción*/\r",
									"var RandNameWebUser3 = pm.variables.replaceIn('{{$randomFirstName}}');\r",
									"pm.variables.set('RandNameWebUser3', RandNameWebUser3);\r",
									"console.log ('Imprime Variable Random ' + RandNameWebUser3);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Creation Failed Client Telephone/Email\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"todopruebas.com\",\r\n    \"id\": 0,\r\n    \"isActive\": true,\r\n    \"isImported\": false,\r\n    \"ldapId\": 0,\r\n    \"name\": \"{{RandNameWebUser3}}\",\r\n    \"phone\": \"123\",\r\n    \"userName\": \"{{RandUserNameWebUser3}}\",\r\n    \"groups\": null,\r\n    \"roles\": [\r\n        {\r\n            \"description\": \"User with access to the web console\",\r\n            \"id\": 270,\r\n            \"isActive\": true,\r\n            \"name\": \"AFLS_Web\"\r\n        },\r\n        {\r\n            \"description\": \"WorkOrders Dispatcher\",\r\n            \"id\": 272,\r\n            \"isActive\": true,\r\n            \"name\": \"AFLS_Dispatcher\"\r\n        }\r\n    ]\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/webuser",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"webuser"
							]
						},
						"description": "http://localhost/PublicApi/api/webuser"
					},
					"response": []
				},
				{
					"name": "Web User Create_Failed exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Creation Failed - Other Web User Exist With The Same Name.\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"NameWebUser1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"UserNameWebUser1\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"todo@pruebas.com\",\r\n    \"id\": 0,\r\n    \"isActive\": true,\r\n    \"isImported\": false,\r\n    \"ldapId\": 0,\r\n    \"name\": \"{{NameWebUser1}}\",\r\n    \"phone\": \"3016153272\",\r\n    \"userName\": \"{{UserNameWebUser1}}\",\r\n    \"roles\": [\r\n        {\r\n            \"description\": \"WorkOrders Dispatcher\",\r\n            \"id\": 272,\r\n            \"isActive\": true,\r\n            \"name\": \"AFLS_Dispatcher\"\r\n        }\r\n    ]\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/webuser",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"webuser"
							]
						},
						"description": "http://localhost/PublicApi/api/webuser"
					},
					"response": []
				},
				{
					"name": "Web User Create_Failed field length",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Creation Failed Of Web User Maxlength\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"todo@pruebas.com\",\r\n    \"id\": 0,\r\n    \"isActive\": true,\r\n    \"isImported\": false,\r\n    \"ldapId\": 0,\r\n    \"name\": \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum ha\",\r\n    \"phone\": \"3016153272\",\r\n    \"userName\": \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum ha\",\r\n    \"groups\": [\r\n    {\r\n      \"description\": \"\",\r\n      \"id\": 14,\r\n      \"isActive\": true,\r\n      \"name\": \"\",\r\n      \"type\": \"\"\r\n    }\r\n  ],\r\n    \"roles\": [\r\n        {\r\n            \"description\": \"\",\r\n            \"id\": 34005,\r\n            \"isActive\": true,\r\n            \"name\": \"\"\r\n        }\r\n    ]\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/webuser",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"webuser"
							]
						},
						"description": "http://localhost/PublicApi/api/webuser"
					},
					"response": []
				},
				{
					"name": "Web User Update_Successful",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/*Se guarda en la variable \"UpdateRandUserNameWebUser1\" una palabra aleatoria para usarla como nombre y descripción*/\r",
									"var UpdateRandUserNameWebUser1 = pm.variables.replaceIn('{{$randomFirstName}}');\r",
									"pm.variables.set('UpdateRandUserNameWebUser1', UpdateRandUserNameWebUser1);\r",
									"console.log ('Imprime Variable Random ' + UpdateRandUserNameWebUser1);\r",
									"\r",
									"/*Se guarda en la variable \"UpdateRandNameWebUser1\" una palabra aleatoria para usarla como nombre y descripción*/\r",
									"var UpdateRandNameWebUser1 = pm.variables.replaceIn('{{$randomFirstName}}');\r",
									"pm.variables.set('UpdateRandNameWebUser1', UpdateRandNameWebUser1);\r",
									"console.log ('Imprime Variable Random ' + UpdateRandNameWebUser1);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Update Of Web User\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdWebUser1\");\r",
									"\r",
									"/*Se guarda el json de la respuesta*/\r",
									"var data = pm.response.json();\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"UpdateNameWebUser1\", data.name);\r",
									"console.log (data.name);\r",
									"\r",
									"/*Se guarda el dato en la variable*/\r",
									"pm.collectionVariables.set(\"UpdateUserNameWebUser1\", data.userName);\r",
									"console.log (data.userName);\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"email\": \"admin@administrador.com\",\n        \"id\": {{IdWebUser1}},\n        \"isActive\": true,\n        \"isImported\": false,\n        \"ldapId\": 0,\n        \"name\": \"{{UpdateRandNameWebUser1}}\",\n        \"phone\": \"3016153272\",\n        \"userName\": \"{{UpdateRandUserNameWebUser1}}\",\n        \"groups\": null,\n        \"roles\": [\n            {\n                \"description\": \"Administrator\",\n                \"id\": 1,\n                \"isActive\": true,\n                \"name\": \"Administrator\"\n            },\n            {\n                \"description\": \"CMManager\",\n                \"id\": 2,\n                \"isActive\": true,\n                \"name\": \"CMManager\"\n            },\n            {\n                \"description\": \"User with access to the web console\",\n                \"id\": 270,\n                \"isActive\": true,\n                \"name\": \"AFLS_Web\"\n            }\n        ]\n    }"
						},
						"url": {
							"raw": "{{API_WS_URL}}/webuser/{{IdWebUser1}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"webuser",
								"{{IdWebUser1}}"
							]
						},
						"description": "http://localhost/PublicApi/api/webuser/{id}"
					},
					"response": []
				},
				{
					"name": "Web User Update_Successful active",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Update Of Web User Active\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdWebUser2\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"NameWebUser2\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"UserNameWebUser2\");\r",
									"\r",
									"/*Se guarda el json de la respuesta*/\r",
									"var data = pm.response.json();\r",
									"\r",
									"/*Se valida el estado que devuelve el Json*/\r",
									"pm.test(\"Validate State Web User\", () => {\r",
									"    pm.expect(data.isActive).to.eql(true);\r",
									"})\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"email\": \"gestor@pruebas.com\",\n        \"id\": {{IdWebUser2}},\n        \"isActive\": true,\n        \"isImported\": false,\n        \"ldapId\": 0,\n        \"name\": \"{{NameWebUser2}}\",\n        \"phone\": \"454564654564\",\n        \"userName\": \"{{UserNameWebUser2}}\",\n        \"groups\": [],\n        \"roles\": [\n            {\n                \"description\": \"User with access to the web console\",\n                \"id\": 270,\n                \"isActive\": true,\n                \"name\": \"AFLS_Web\"\n            },\n            {\n                \"description\": \"Inventory Manager\",\n                \"id\": 275,\n                \"isActive\": true,\n                \"name\": \"AFLS_Inventory\"\n            }\n        ]\n    }"
						},
						"url": {
							"raw": "{{API_WS_URL}}/webuser/{{IdWebUser2}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"webuser",
								"{{IdWebUser2}}"
							]
						},
						"description": "http://localhost/PublicApi/api/webuser/{id}"
					},
					"response": []
				},
				{
					"name": "Web User Update_Failed required fields",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Update Failed Web User Required Fields\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdWebUser2\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "    {\n        \"email\": \"\",\n        \"id\": {{IdWebUser2}},\n        \"isActive\": false,\n        \"isImported\": false,\n        \"ldapId\": 0,\n        \"name\": \"\",\n        \"phone\": \"\",\n        \"userName\": \"\",\n        \"groups\": [],\n        \"roles\": []\n    }"
						},
						"url": {
							"raw": "{{API_WS_URL}}/webuser/{{IdWebUser2}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"webuser",
								"{{IdWebUser2}}"
							]
						},
						"description": "http://localhost/PublicApi/api/webuser/{id}"
					},
					"response": []
				},
				{
					"name": "Web User Update_Failed telephone/email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Update Failed Web User Telephone/Email\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdWebUser2\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"NameWebUser2\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"UserNameWebUser2\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "    {\n        \"email\": \"yser@miler\",\n        \"id\": {{IdWebUser2}},\n        \"isActive\": true,\n        \"isImported\": false,\n        \"ldapId\": 0,\n        \"name\": \"{{NameWebUser2}}\",\n        \"phone\": \"344\",\n        \"userName\": \"{{UserNameWebUser2}}\",\n        \"groups\": [],\n        \"roles\": [\n            {\n                \"description\": \"Administrator\",\n                \"id\": 1,\n                \"isActive\": true,\n                \"name\": \"Administrator\"\n            },\n            {\n                \"description\": \"CMManager\",\n                \"id\": 2,\n                \"isActive\": true,\n                \"name\": \"CMManager\"\n            },\n            {\n                \"description\": \"User with access to the web console\",\n                \"id\": 270,\n                \"isActive\": true,\n                \"name\": \"AFLS_Web\"\n            }\n        ]\n    }"
						},
						"url": {
							"raw": "{{API_WS_URL}}/webuser/{{IdWebUser2}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"webuser",
								"{{IdWebUser2}}"
							]
						},
						"description": "http://localhost/PublicApi/api/webuser/{id}"
					},
					"response": []
				},
				{
					"name": "Web User Update_Failed exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Update Failed - Other Web User Exist With The Same Name.\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdWebUser2\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"UpdateNameWebUser1\");\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"UpdateUserNameWebUser1\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "    {\n        \"email\": \"yser@miler.com\",\n        \"id\": {{IdWebUser2}},\n        \"isActive\": true,\n        \"isImported\": false,\n        \"ldapId\": 0,\n        \"name\": \"{{UpdateNameWebUser1}}\",\n        \"phone\": \"3005556677\",\n        \"userName\": \"{{UpdateUserNameWebUser1}}\",\n        \"groups\": [],\n        \"roles\": [\n            {\n                \"description\": \"Administrator\",\n                \"id\": 1,\n                \"isActive\": true,\n                \"name\": \"Administrator\"\n            },\n            {\n                \"description\": \"CMManager\",\n                \"id\": 2,\n                \"isActive\": true,\n                \"name\": \"CMManager\"\n            },\n            {\n                \"description\": \"User with access to the web console\",\n                \"id\": 270,\n                \"isActive\": true,\n                \"name\": \"AFLS_Web\"\n            }\n        ]\n    }"
						},
						"url": {
							"raw": "{{API_WS_URL}}/webuser/{{IdWebUser2}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"webuser",
								"{{IdWebUser2}}"
							]
						},
						"description": "http://localhost/PublicApi/api/webuser/{id}"
					},
					"response": []
				},
				{
					"name": "Web User Update_Failed field length",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Update Failed Of Web User Maxlength\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdWebUser2\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "    {\n        \"email\": \"yser@miler.com\",\n        \"id\": {{IdWebUser2}},\n        \"isActive\": true,\n        \"isImported\": false,\n        \"ldapId\": 0,\n        \"name\": \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum ha\",\n        \"phone\": \"3005556677\",\n        \"userName\": \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum ha\",\n        \"groups\": [],\n        \"roles\": [\n            {\n                \"description\": \"Administrator\",\n                \"id\": 1,\n                \"isActive\": true,\n                \"name\": \"Administrator\"\n            },\n            {\n                \"description\": \"CMManager\",\n                \"id\": 2,\n                \"isActive\": true,\n                \"name\": \"CMManager\"\n            },\n            {\n                \"description\": \"User with access to the web console\",\n                \"id\": 270,\n                \"isActive\": true,\n                \"name\": \"AFLS_Web\"\n            }\n        ]\n    }"
						},
						"url": {
							"raw": "{{API_WS_URL}}/webuser/{{IdWebUser2}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"webuser",
								"{{IdWebUser2}}"
							]
						},
						"description": "http://localhost/PublicApi/api/webuser/{id}"
					},
					"response": []
				},
				{
					"name": "Web User by ID_Successful",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Read Of Web User\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdWebUser1\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{API_WS_URL}}/webuser/{{IdWebUser1}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"webuser",
								"{{IdWebUser1}}"
							]
						},
						"description": "http://localhost/PublicApi/api/webuser/{id}"
					},
					"response": []
				},
				{
					"name": "Web User by ID_Failed not exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"No Information Found\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{API_WS_URL}}/webuser/1000",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"webuser",
								"1000"
							]
						},
						"description": "http://localhost/PublicApi/api/webuser/{id}"
					},
					"response": []
				},
				{
					"name": "Web Users List_Successful",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful List Of Web User\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"NameWebUser2\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"word\": \"{{NameWebUser2}}\",\r\n  \"page\": 0,\r\n  \"rows\": 0\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/webuser/list",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"webuser",
								"list"
							]
						},
						"description": "http://localhost/PublicApi/api/webuser/list"
					},
					"response": []
				},
				{
					"name": "Web Users List_Failed not exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"No Information Found\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"word\": \"eliminar\",\r\n  \"page\": 0,\r\n  \"rows\": 0\r\n}"
						},
						"url": {
							"raw": "{{API_WS_URL}}/webuser/list",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"webuser",
								"list"
							]
						},
						"description": "http://localhost/PublicApi/api/webuser/list"
					},
					"response": []
				},
				{
					"name": "Web User Delete_Successful",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 200*/\r",
									"pm.test(\"Successful Delete Of Web User\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*Se llama la variable para enviarla en el body*/\r",
									"pm.collectionVariables.get(\"IdWebUser2\");\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{API_WS_URL}}/webuser/{{IdWebUser2}}",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"webuser",
								"{{IdWebUser2}}"
							]
						},
						"description": "http://localhost/PublicApi/api/webuser/{id}"
					},
					"response": []
				},
				{
					"name": "Web User Delete_Failed used",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"Record In Use, Cannot Be Deleted.\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{API_WS_URL}}/webuser/3",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"webuser",
								"3"
							]
						},
						"description": "http://localhost/PublicApi/api/webuser/{id}"
					},
					"response": []
				},
				{
					"name": "Web User Delete_Failed not exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*Se valida que el codigo que devuelve la respuesta sea 400*/\r",
									"pm.test(\"The Web User, No Found.\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"/*Se agrega tiempo de espera*/\r",
									"pm.test(\"Tiempo de espera\", function () {\r",
									"    setTimeout (() => {console.log (\"La declaración aquí se ejecutará después de 1 segundos\");}, 1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{SYS_AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{API_WS_URL}}/webuser/5000",
							"host": [
								"{{API_WS_URL}}"
							],
							"path": [
								"webuser",
								"5000"
							]
						},
						"description": "http://localhost/PublicApi/api/webuser/{id}"
					},
					"response": []
				}
			],
			"description": "Apis Usuarios Web"
		}
	],
	"variable": [
		{
			"key": "variable_key",
			"value": ""
		},
		{
			"key": "idsla",
			"value": ""
		},
		{
			"key": "idsla1",
			"value": ""
		},
		{
			"key": "idsla2",
			"value": ""
		},
		{
			"key": "namesla",
			"value": ""
		},
		{
			"key": "namesla1",
			"value": ""
		},
		{
			"key": "namesla2",
			"value": ""
		},
		{
			"key": "namesla3",
			"value": ""
		},
		{
			"key": "idskill",
			"value": ""
		},
		{
			"key": "nameskill",
			"value": ""
		},
		{
			"key": "idskill1",
			"value": ""
		},
		{
			"key": "nameskill1",
			"value": ""
		},
		{
			"key": "nameskill2",
			"value": ""
		},
		{
			"key": "IdSla1",
			"value": ""
		},
		{
			"key": "NameSla1",
			"value": ""
		},
		{
			"key": "IdSla2",
			"value": ""
		},
		{
			"key": "NameSla2",
			"value": ""
		},
		{
			"key": "IdSkill2",
			"value": ""
		},
		{
			"key": "NameSkill2",
			"value": ""
		},
		{
			"key": "IdSkill1",
			"value": ""
		},
		{
			"key": "NameSkill1",
			"value": ""
		},
		{
			"key": "IdVehicle1",
			"value": ""
		},
		{
			"key": "NameVehicle1",
			"value": ""
		},
		{
			"key": "IdVehicle2",
			"value": ""
		},
		{
			"key": "NameVehicle2",
			"value": ""
		},
		{
			"key": "IdService1",
			"value": ""
		},
		{
			"key": "NameService1",
			"value": ""
		},
		{
			"key": "IdService2",
			"value": ""
		},
		{
			"key": "NameService2",
			"value": ""
		},
		{
			"key": "UpdateNameSla1",
			"value": ""
		},
		{
			"key": "UpdateNameSkill1",
			"value": ""
		},
		{
			"key": "UpdateNameVehicle1",
			"value": ""
		},
		{
			"key": "UpdateNameService1",
			"value": ""
		},
		{
			"key": "IdCompany1",
			"value": ""
		},
		{
			"key": "NameCompany1",
			"value": ""
		},
		{
			"key": "UniqueReferenceCompany1",
			"value": ""
		},
		{
			"key": "IdCompany2",
			"value": ""
		},
		{
			"key": "NameCompany2",
			"value": ""
		},
		{
			"key": "UniqueReferenceCompany2",
			"value": ""
		},
		{
			"key": "UpdateNameCompany1",
			"value": ""
		},
		{
			"key": "UpdateUniqueReferenceCompany1",
			"value": ""
		},
		{
			"key": "IdZone1",
			"value": ""
		},
		{
			"key": "NameZone1",
			"value": ""
		},
		{
			"key": "IdZone2",
			"value": ""
		},
		{
			"key": "NameZone2",
			"value": ""
		},
		{
			"key": "UpdateNameZone1",
			"value": ""
		},
		{
			"key": "IdProvider1",
			"value": ""
		},
		{
			"key": "NameProvider1",
			"value": ""
		},
		{
			"key": "IdProvider2",
			"value": ""
		},
		{
			"key": "NameProvider2",
			"value": ""
		},
		{
			"key": "UpdateRandNameProvider1",
			"value": ""
		},
		{
			"key": "IdClient1",
			"value": ""
		},
		{
			"key": "NameClient1",
			"value": ""
		},
		{
			"key": "UniqueReferenceClient1",
			"value": ""
		},
		{
			"key": "IdClient2",
			"value": ""
		},
		{
			"key": "NameClient2",
			"value": ""
		},
		{
			"key": "UniqueReferenceClient2",
			"value": ""
		},
		{
			"key": "UpdateNameClient1",
			"value": ""
		},
		{
			"key": "UpdateUniqueReferenceClient1",
			"value": ""
		},
		{
			"key": "IdWebUser1",
			"value": ""
		},
		{
			"key": "NameWebUser1",
			"value": ""
		},
		{
			"key": "UserNameWebUser1",
			"value": ""
		},
		{
			"key": "IdWebUser2",
			"value": ""
		},
		{
			"key": "NameWebUser2",
			"value": ""
		},
		{
			"key": "UserNameWebUser2",
			"value": ""
		},
		{
			"key": "UpdateNameWebUser1",
			"value": ""
		},
		{
			"key": "UpdateUserNameWebUser1",
			"value": ""
		}
	]
}